{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fullstack\\\\Desktop\\\\TeamWorks\\\\WAKAUT\\\\next\\\\pages\\\\board\\\\boardlist.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Alerts from '../../components/alert';\nimport Search from '../../components/search';\nimport { Container } from 'react-bootstrap';\nimport List from '../../components/list';\nimport WriteModal from './write_modal';\nimport getLayout from '../../components/layouts/getLayout';\nimport { Datas } from '../feutils';\n\nfunction handleScroll() {\n  const scrollHeight = document.documentElement.scrollHeight;\n  const scrollTop = document.documentElement.scrollTop;\n  const clientHeight = document.documentElement.clientHeight;\n  let cnt = 1;\n\n  if (scrollTop + clientHeight >= scrollHeight) {\n    cnt++;\n  }\n\n  return cnt;\n}\n\nexport async function getServerSideProps(ctx) {\n  let boards = await Datas('/board/boardlist', 'pg=5');\n  return {\n    props: {\n      boards\n    }\n  };\n}\n\nconst BoardList = ({\n  boards\n}) => {\n  console.log(handleScroll());\n\n  async function dts() {\n    let pg = handleScroll() * 5;\n    let boards = await Datas('/board/boardlist', `pg=${pg}`);\n    console.log('가져와봐!', boards);\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, {\n      capture: true\n    });\n    dts();\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll, {\n        capture: true\n      });\n    };\n  });\n  const {\n    0: lgShow,\n    1: setLgShow\n  } = useState(false);\n  return __jsx(React.Fragment, null, __jsx(Alerts, {\n    color: \"success\",\n    msg: \"\\uD574\\uB2F9 \\uAC8C\\uC2DC\\uD310\\uC740 \\uAD00\\uB9AC\\uC790\\uC5D0\\uC758\\uD574 \\uC2E4\\uC2DC\\uAC04 \\uAD00\\uB9AC\\uB418\\uACE0\\uC788\\uC2B5\\uB2C8\\uB2E4. \\uD5C8\\uC704\\uC0AC\\uC2E4\\uC720\\uD3EC \\uBC0F \\uBD80\\uC801\\uC808\\uD55C \\uD45C\\uD604\\uC740 \\uCC28\\uB2E8\\uB420 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), __jsx(Search, {\n    cat: ['Content', 'Review'],\n    title: \"All\",\n    btn: ['검색하기', '새글쓰기'],\n    btncol: ['secondary', 'success'],\n    click: [false, () => {\n      setLgShow(true);\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(Container, {\n    className: \"lists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, boards.boards.map((m, idx) => {\n    return __jsx(List, {\n      key: idx,\n      title: m.title,\n      note: m.content,\n      malcnt: m.cmtcnt,\n      img: true,\n      col: \"bg-warning\",\n      time: m.regdate2,\n      kd: m.category,\n      view: m.views,\n      to: `/board/boardview?bid=${m.bid}`,\n      name: m.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 28\n      }\n    });\n  })), __jsx(WriteModal, {\n    lgShow: lgShow,\n    setLgShow: setLgShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }));\n};\n\ngetLayout(BoardList, {\n  title: '다같이 운동해요! WAKAUT!',\n  description: '워크아웃 커뮤니티 게시판입니다.'\n});\nexport default BoardList;","map":{"version":3,"sources":["C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/pages/board/boardlist.js"],"names":["useEffect","useState","Alerts","Search","Container","List","WriteModal","getLayout","Datas","handleScroll","scrollHeight","document","documentElement","scrollTop","clientHeight","cnt","getServerSideProps","ctx","boards","props","BoardList","console","log","dts","pg","window","addEventListener","capture","removeEventListener","lgShow","setLgShow","map","m","idx","title","content","cmtcnt","regdate2","category","views","bid","name","description"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAAQC,KAAR,QAAoB,YAApB;;AAEA,SAASC,YAAT,GAAuB;AACnB,QAAMC,YAAY,GAAGC,QAAQ,CAACC,eAAT,CAAyBF,YAA9C;AACA,QAAMG,SAAS,GAAGF,QAAQ,CAACC,eAAT,CAAyBC,SAA3C;AACA,QAAMC,YAAY,GAAGH,QAAQ,CAACC,eAAT,CAAyBE,YAA9C;AACA,MAAIC,GAAG,GAAG,CAAV;;AACA,MAAIF,SAAS,GAAGC,YAAZ,IAA4BJ,YAAhC,EAA8C;AAC5CK,IAAAA,GAAG;AACJ;;AACD,SAAOA,GAAP;AACH;;AAED,OAAO,eAAeC,kBAAf,CAAkCC,GAAlC,EAAsC;AACzC,MAAIC,MAAM,GAAG,MAAMV,KAAK,CAAC,kBAAD,EAAoB,MAApB,CAAxB;AACA,SAAM;AAACW,IAAAA,KAAK,EAAC;AAACD,MAAAA;AAAD;AAAP,GAAN;AAEH;;AAED,MAAME,SAAS,GAAC,CAAC;AAACF,EAAAA;AAAD,CAAD,KAAY;AACxBG,EAAAA,OAAO,CAACC,GAAR,CAAYb,YAAY,EAAxB;;AACA,iBAAec,GAAf,GAAoB;AAChB,QAAIC,EAAE,GAAGf,YAAY,KAAG,CAAxB;AACA,QAAIS,MAAM,GAAG,MAAMV,KAAK,CAAC,kBAAD,EAAqB,MAAKgB,EAAG,EAA7B,CAAxB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBJ,MAApB;AACH;;AACDlB,EAAAA,SAAS,CAAC,MAAI;AACVyB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCjB,YAAlC,EAAgD;AAAEkB,MAAAA,OAAO,EAAE;AAAX,KAAhD;AACAJ,IAAAA,GAAG;AACH,WAAO,MAAI;AACPE,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAoCnB,YAApC,EAAiD;AAAEkB,QAAAA,OAAO,EAAE;AAAX,OAAjD;AACH,KAFD;AAGH,GANQ,CAAT;AAQA,QAAM;AAAA,OAACE,MAAD;AAAA,OAASC;AAAT,MAAsB7B,QAAQ,CAAC,KAAD,CAApC;AACA,SACI,4BACA,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,GAAG,EAAC,6RAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAE,CAAC,SAAD,EAAW,QAAX,CAAb;AAAmC,IAAA,KAAK,EAAC,KAAzC;AAA+C,IAAA,GAAG,EAAE,CAAC,MAAD,EAAQ,MAAR,CAApD;AAAqE,IAAA,MAAM,EAAE,CAAC,WAAD,EAAa,SAAb,CAA7E;AAAsG,IAAA,KAAK,EAAE,CAAC,KAAD,EAAO,MAAI;AAAC6B,MAAAA,SAAS,CAAC,IAAD,CAAT;AAAgB,KAA5B,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQZ,MAAM,CAACA,MAAP,CAAca,GAAd,CAAkB,CAACC,CAAD,EAAGC,GAAH,KAAS;AACvB,WAAO,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,GAAX;AAAgB,MAAA,KAAK,EAAED,CAAC,CAACE,KAAzB;AAAgC,MAAA,IAAI,EAAEF,CAAC,CAACG,OAAxC;AAAiD,MAAA,MAAM,EAAEH,CAAC,CAACI,MAA3D;AAAmE,MAAA,GAAG,EAAE,IAAxE;AAA8E,MAAA,GAAG,EAAC,YAAlF;AAA+F,MAAA,IAAI,EAAEJ,CAAC,CAACK,QAAvG;AAAiH,MAAA,EAAE,EAAEL,CAAC,CAACM,QAAvH;AAAiI,MAAA,IAAI,EAAEN,CAAC,CAACO,KAAzI;AAAgJ,MAAA,EAAE,EAAG,wBAAuBP,CAAC,CAACQ,GAAI,EAAlL;AAAqL,MAAA,IAAI,EAAER,CAAC,CAACS,IAA7L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CAFR,CAHA,EAUA,MAAC,UAAD;AAAY,IAAA,MAAM,EAAEZ,MAApB;AAA4B,IAAA,SAAS,EAAEC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,CADJ;AAcH,CA9BD;;AAgCAvB,SAAS,CAACa,SAAD,EAAW;AAACc,EAAAA,KAAK,EAAC,mBAAP;AAA2BQ,EAAAA,WAAW,EAAC;AAAvC,CAAX,CAAT;AACA,eAAetB,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Alerts from '../../components/alert';\r\nimport Search from '../../components/search';\r\nimport {Container} from 'react-bootstrap';\r\nimport List from '../../components/list';\r\nimport WriteModal from './write_modal';\r\nimport getLayout from '../../components/layouts/getLayout';\r\nimport {Datas} from '../feutils';\r\n\r\nfunction handleScroll(){\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n    let cnt = 1;\r\n    if (scrollTop + clientHeight >= scrollHeight) {\r\n      cnt++;\r\n    }\r\n    return cnt;\r\n}\r\n\r\nexport async function getServerSideProps(ctx){\r\n    let boards = await Datas('/board/boardlist','pg=5');\r\n    return{props:{boards}};\r\n    \r\n}\r\n\r\nconst BoardList=({boards})=>{\r\n    console.log(handleScroll());\r\n    async function dts(){\r\n        let pg = handleScroll()*5;\r\n        let boards = await Datas('/board/boardlist',`pg=${pg}`);\r\n        console.log('가져와봐!',boards);\r\n    }\r\n    useEffect(()=>{\r\n        window.addEventListener('scroll', handleScroll, { capture: true });\r\n        dts();\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\",handleScroll,{ capture: true });\r\n        }\r\n    })\r\n    \r\n    const [lgShow, setLgShow] = useState(false);\r\n    return(\r\n        <>\r\n        <Alerts color='success' msg='해당 게시판은 관리자에의해 실시간 관리되고있습니다. 허위사실유포 및 부적절한 표현은 차단될 수 있습니다.'/>\r\n        <Search cat={['Content','Review']} title='All' btn={['검색하기','새글쓰기']} btncol={['secondary','success']} click={[false,()=>{setLgShow(true)}]}/>\r\n        <Container className=\"lists\">\r\n            {\r\n                boards.boards.map((m,idx)=>{\r\n                    return <List key={idx} title={m.title} note={m.content} malcnt={m.cmtcnt} img={true} col='bg-warning' time={m.regdate2} kd={m.category} view={m.views} to={`/board/boardview?bid=${m.bid}`} name={m.name} />\r\n                })\r\n            }\r\n        </Container>\r\n        <WriteModal lgShow={lgShow} setLgShow={setLgShow}/>\r\n        </>\r\n    )\r\n}\r\n\r\ngetLayout(BoardList,{title:'다같이 운동해요! WAKAUT!',description:'워크아웃 커뮤니티 게시판입니다.'})\r\nexport default BoardList;\r\n"]},"metadata":{},"sourceType":"module"}