{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/pc/Desktop/\\uD559\\uC5B8/WAKAUT/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/pc/Desktop/\\uD559\\uC5B8/WAKAUT/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport List from \"../../components/list\";\nimport Link from \"next/link\";\nimport { useState } from 'react';\nimport WriteModal from \"./write_modal\";\nimport Mgmodal from \"../../components/mgmodal\";\nimport getLayout from '../../components/layouts/getLayout';\nimport { Datas, Post } from '../feutils'; // //데이터 끌고오기!\n// export async function getServerSideProps(ctx){\n//     let boards = await Datas(`/board/boardview?bid=${ctx.query.bid}`);\n//     return{props:{boards}};\n// }\n//데이터 끌고오기!\n\nexport function bd(_x) {\n  return _bd.apply(this, arguments);\n}\n\nfunction _bd() {\n  _bd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    var boards;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return Datas(\"/board/boardview?bid=\".concat(ctx.query.bid));\n\n          case 2:\n            boards = _context2.sent;\n            console.log(boards);\n            return _context2.abrupt(\"return\", boards);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _bd.apply(this, arguments);\n}\n\nvar title = '타이틀세팅 준비중';\nvar contents = '타이틀세팅 준비중';\n\nvar Boardview = function Boardview(_ref) {\n  _s();\n\n  var boards = _ref.boards;\n  console.log(bd);\n\n  var _useState = useState(false),\n      lgShow = _useState[0],\n      setLgShow = _useState[1];\n\n  var _useState2 = useState(false),\n      mgShow = _useState2[0],\n      setMgShow = _useState2[1];\n\n  var _useState3 = useState(''),\n      title = _useState3[0],\n      setTitle = _useState3[1];\n\n  var _useState4 = useState(''),\n      note = _useState4[0],\n      setNote = _useState4[1]; //데이터 등록하기\n\n\n  function write(_x2) {\n    return _write.apply(this, arguments);\n  }\n\n  function _write() {\n    _write = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              location.href = \"http://localhost:3000/board/boardview?bid=\".concat(boards[0].bid);\n              Post({\n                title: title,\n                userid: userId,\n                contents: contents\n              }, '/board/write');\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _write.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null);\n};\n\n_s(Boardview, \"DZdywWhU5pzClxeWJhi92aROAtQ=\");\n\n_c = Boardview;\nexport default Boardview;\ngetLayout(Boardview, {\n  title: title,\n  description: contents\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Boardview\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/학언/WAKAUT/next/pages/board/boardview.js"],"names":["Container","Form","Button","List","Link","useState","WriteModal","Mgmodal","getLayout","Datas","Post","bd","ctx","query","bid","boards","console","log","title","contents","Boardview","lgShow","setLgShow","mgShow","setMgShow","setTitle","note","setNote","write","e","preventDefault","location","href","userid","userId","description"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAmBC,IAAnB,EAAwBC,MAAxB,QAAsC,iBAAtC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAAQC,KAAR,EAAcC,IAAd,QAAyB,YAAzB,C,CAEA;AACA;AACA;AACA;AACA;AAGA;;AACA,gBAAsBC,EAAtB;AAAA;AAAA;;;iEAAO,kBAAkBC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACgBH,KAAK,gCAAyBG,GAAG,CAACC,KAAJ,CAAUC,GAAnC,EADrB;;AAAA;AACCC,YAAAA,MADD;AAEHC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAFG,8CAGIA,MAHJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMP,IAAIG,KAAK,GAAG,WAAZ;AACA,IAAIC,QAAQ,GAAG,WAAf;;AAIA,IAAMC,SAAS,GAAC,SAAVA,SAAU,OAAY;AAAA;;AAAA,MAAVL,MAAU,QAAVA,MAAU;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;;AADwB,kBAEIN,QAAQ,CAAC,KAAD,CAFZ;AAAA,MAEjBgB,MAFiB;AAAA,MAETC,SAFS;;AAAA,mBAGIjB,QAAQ,CAAC,KAAD,CAHZ;AAAA,MAGjBkB,MAHiB;AAAA,MAGTC,SAHS;;AAAA,mBAICnB,QAAQ,CAAC,EAAD,CAJT;AAAA,MAIjBa,KAJiB;AAAA,MAIVO,QAJU;;AAAA,mBAKDpB,QAAQ,CAAC,EAAD,CALP;AAAA,MAKjBqB,IALiB;AAAA,MAKXC,OALW,kBAOxB;;;AAPwB,WAQTC,KARS;AAAA;AAAA;;AAAA;AAAA,sEAQxB,iBAAqBC,CAArB;AAAA;AAAA;AAAA;AAAA;AACIA,cAAAA,CAAC,CAACC,cAAF;AACAC,cAAAA,QAAQ,CAACC,IAAT,uDAA2DjB,MAAM,CAAC,CAAD,CAAN,CAAUD,GAArE;AACAJ,cAAAA,IAAI,CAAC;AAACQ,gBAAAA,KAAK,EAACA,KAAP;AAAae,gBAAAA,MAAM,EAACC,MAApB;AAA2Bf,gBAAAA,QAAQ,EAACA;AAApC,eAAD,EAA+C,cAA/C,CAAJ;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARwB;AAAA;AAAA;;AAexB,SACI,2BADJ;AA4CH,CA3DD;;GAAMC,S;;KAAAA,S;AA4DN,eAAeA,SAAf;AAEAZ,SAAS,CAACY,SAAD,EAAW;AAACF,EAAAA,KAAK,EAACA,KAAP;AAAaiB,EAAAA,WAAW,EAAChB;AAAzB,CAAX,CAAT","sourcesContent":["import { Container,Form,Button } from \"react-bootstrap\";\r\nimport List from \"../../components/list\";\r\nimport Link from \"next/link\";\r\nimport {useState} from 'react';\r\nimport WriteModal from \"./write_modal\";\r\nimport Mgmodal from \"../../components/mgmodal\";\r\nimport getLayout from '../../components/layouts/getLayout';\r\nimport {Datas,Post} from '../feutils';\r\n\r\n// //데이터 끌고오기!\r\n// export async function getServerSideProps(ctx){\r\n//     let boards = await Datas(`/board/boardview?bid=${ctx.query.bid}`);\r\n//     return{props:{boards}};\r\n// }\r\n\r\n\r\n//데이터 끌고오기!\r\nexport async function bd(ctx){\r\n    let boards = await Datas(`/board/boardview?bid=${ctx.query.bid}`);\r\n    console.log(boards);\r\n    return boards;\r\n}\r\n\r\nlet title = '타이틀세팅 준비중';\r\nlet contents = '타이틀세팅 준비중';\r\n\r\n\r\n\r\nconst Boardview=({boards})=>{\r\n    console.log(bd);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [mgShow, setMgShow] = useState(false);\r\n    const [title, setTitle]= useState('');\r\n    const [note, setNote]= useState('');\r\n    \r\n    //데이터 등록하기\r\n    async function write(e){\r\n        e.preventDefault();\r\n        location.href=`http://localhost:3000/board/boardview?bid=${boards[0].bid}`;\r\n        Post({title:title,userid:userId,contents:contents},'/board/write');\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <div className=\"brdview\">\r\n                <header className=\"bg-secondary pt-5 pb-4 brdview\">\r\n                </header>\r\n                <Container>\r\n                    <List title={boards[0].title} kd={boards[0].category} time={boards[0].regdate2} view={boards[0].views+1} name={boards[0].name}/>\r\n                </Container>\r\n            </div>\r\n            \r\n            <Container>\r\n                <p className=\"viewnote\">{boards[0].content}</p>\r\n                <div className=\"replay p-5\">\r\n                    {\r\n                        boards[0].com.map((m,idx)=>{\r\n                            return(\r\n                                <>\r\n                                 <div className=\"txtLft d-flex\" key={idx}>\r\n                                    <h5>{m.name}</h5>\r\n                                    <p className=\"ms-5\">{m.comment} <small>{m.regdate2}</small></p>\r\n                                 </div>\r\n                                </>\r\n                           )\r\n                        })\r\n                    }\r\n                <Form>\r\n                    <div className=\"reTxt d-flex align-items-end mt-4\"> \r\n                        <Form.Control as=\"textarea\" placeholder=\"댓글은 한번 달면 삭제가 불가능하답니당 👮‍♂️👮‍♀️ \" style={{ height: '80px' ,width:'90%' }} />\r\n                        <button className=\"btn btn-success ms-3\" type=\"submit\" onClick={(e)=>{write(e)}}>댓글 등록</button>\r\n                    </div>\r\n                </Form>\r\n                </div>\r\n                <div className=\"btns mt-4 mb-4 d-flex  justify-content-end\">\r\n                    \r\n                    <Button className=\"ms-2\" variant=\"primary\"><Link href=\"/board/boardlist\">목록으로</Link></Button>\r\n                    <Button className=\"ms-2\" variant=\"success\" onClick={()=>{setLgShow(true)}}>수정하기</Button>\r\n                    <Button className=\"ms-2\" variant=\"secondary\" onClick={()=>{setMgShow(true)}}>삭제하기</Button>\r\n                    <Button className=\"ms-2\" variant=\"danger\" onClick={()=>{setMgShow(true)}}>강제삭제</Button>\r\n                </div>\r\n                <Mgmodal LgShow={mgShow} setLgShow={setMgShow} title=\"게시글 삭제\" msg=\"정말 삭제하시겠습니까?\"/>\r\n               <WriteModal title={boards[0].title} note={boards[0].content} setLgShow={setLgShow} lgShow={lgShow}/>\r\n            </Container> */}\r\n        </>\r\n    )\r\n}\r\nexport default Boardview;\r\n\r\ngetLayout(Boardview,{title:title,description:contents});"]},"metadata":{},"sourceType":"module"}