{"ast":null,"code":"import _extends from \"C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\fullstack\\\\Desktop\\\\TeamWorks\\\\WAKAUT\\\\next\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport '../styles/globals.css';\nimport '../styles/boot-added.css';\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport App from \"next/app\"; // import {getSession} from \"next-auth/client\";\n\nimport Loading from '../components/loading';\n\nfunction MyApp(_ref) {\n  _s();\n\n  var _Component$getLayout;\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    router.events.on(\"routeChangeStart\", function () {\n      setLoading(true);\n    });\n    router.events.on(\"routeChangeComplete\", function () {\n      setLoading(false);\n    });\n  }, [router]);\n  var getLayout = (_Component$getLayout = Component.getLayout) !== null && _Component$getLayout !== void 0 ? _Component$getLayout : function (page) {\n    return page;\n  };\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, loading && __jsx(Loading, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }\n  }), getLayout(__jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }\n  }))));\n} // MyApp.getInitialProps = async (ctx)=>{\n//   // next app의 기본 props객체 초기화\n//   //application단위의 전역변수\n//   const appProps = await App.getInitialProps(ctx);\n//   // const sess =await getSession(ctx);\n//   // appProps.menu = menu;\n//   return {...appProps};\n// }\n\n\n_s(MyApp, \"8810P58p93OmzehzWswFpSGjH9I=\", false, function () {\n  return [useRouter];\n});\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/pages/_app.js"],"names":["React","useState","useEffect","useRouter","App","Loading","MyApp","Component","pageProps","router","loading","setLoading","events","on","getLayout","page"],"mappings":";;;;;;AAAA,OAAO,uBAAP;AACA,OAAO,0BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,GAAP,MAAgB,UAAhB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,KAAT,OAAyC;AAAA;;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACvC,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;AADuC,kBAEVF,QAAQ,CAAC,KAAD,CAFE;AAAA,MAEhCS,OAFgC;AAAA,MAExBC,UAFwB;;AAGvCT,EAAAA,SAAS,CAAC,YAAI;AACZO,IAAAA,MAAM,CAACG,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,YAAM;AACzCF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD;AAGAF,IAAAA,MAAM,CAACG,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,YAAM;AAC5CF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD;AAGD,GAPQ,EAOP,CAACF,MAAD,CAPO,CAAT;AAQA,MAAMK,SAAS,2BAAIP,SAAS,CAACO,SAAd,uEAA4B,UAACC,IAAD;AAAA,WAAQA,IAAR;AAAA,GAA3C;AACA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,IAAI,MAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,EAEII,SAAS,CAAE,MAAC,SAAD,eAAeN,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF,CAFb,CADF;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA3BSF,K;UACQH,S;;;KADRG,K;AA4BT,eAAeA,KAAf","sourcesContent":["import '../styles/globals.css';\r\nimport '../styles/boot-added.css';\r\nimport React from \"react\";\r\nimport { useState,useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport App from \"next/app\";\r\n// import {getSession} from \"next-auth/client\";\r\nimport Loading from '../components/loading';\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  const router = useRouter();\r\n  const [loading,setLoading] = useState(false);\r\n  useEffect(()=>{\r\n    router.events.on(\"routeChangeStart\", () => {\r\n      setLoading(true);\r\n    });\r\n    router.events.on(\"routeChangeComplete\", () => {\r\n      setLoading(false);\r\n    });\r\n  },[router])\r\n  const getLayout =  Component.getLayout ?? ((page)=>page);\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <Loading loading={loading} />}\r\n      { getLayout( <Component {...pageProps} /> )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n// MyApp.getInitialProps = async (ctx)=>{\r\n//   // next app의 기본 props객체 초기화\r\n//   //application단위의 전역변수\r\n//   const appProps = await App.getInitialProps(ctx);\r\n//   // const sess =await getSession(ctx);\r\n//   // appProps.menu = menu;\r\n//   return {...appProps};\r\n// }\r\nexport default MyApp\r\n"]},"metadata":{},"sourceType":"module"}