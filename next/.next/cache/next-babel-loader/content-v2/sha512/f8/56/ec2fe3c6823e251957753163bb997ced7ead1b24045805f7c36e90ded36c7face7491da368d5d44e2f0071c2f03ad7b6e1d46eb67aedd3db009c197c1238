{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\fullstack\\\\Desktop\\\\TeamWorks\\\\WAKAUT\\\\next\\\\pages\\\\member\\\\check.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport getLayout from '../../components/layouts/getLayout';\nimport { Datas } from '../../components/feutils';\nimport { useEffect, useState } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nexport default function checkSocial(_ref) {\n  _s();\n\n  var session = _ref.session;\n\n  var _useState = useState('님은 인증된 사용자입니다. 메인으로 이동합니다.'),\n      msg = _useState[0],\n      setMsg = _useState[1];\n\n  function dt() {\n    return _dt.apply(this, arguments);\n  }\n\n  function _dt() {\n    _dt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Datas('/member/checked', \"userid=\".concat(session.userid)).then(function (res) {\n                return res;\n              });\n\n            case 2:\n              res = _context.sent;\n\n              // console.log('들어오는 데이터 확인'+res.length);\n              if (res.length > 0) {\n                location.href = '/';\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _dt.apply(this, arguments);\n  }\n\n  function socialJoin() {\n    return _socialJoin.apply(this, arguments);\n  }\n\n  function _socialJoin() {\n    _socialJoin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Datas('/member/checked', \"userid=\".concat(session.userid, \"&name=\").concat(session.name, \"&email=\").concat(session.email)).then(function (res) {\n                return res;\n              });\n\n            case 2:\n              setMsg(\"님은 아직 가입되지 않았습니다.\");\n              location.href = '/';\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _socialJoin.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    dt();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, session.userid, msg), msg === '님은 아직 가입되지 않았습니다.' ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"\\uC544\\uB798\\uC758 \\uBC84\\uD2BC\\uC744 \\uB20C\\uB7EC \\uAC04\\uD3B8\\uD558\\uAC8C \\uAC00\\uC785\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 55\n    }\n  }), \"\\uAC00\\uC785\\uC744 \\uD558\\uBA74 \\uAE00\\uC4F0\\uAE30 \\uB313\\uAE00 \\uB4F1\\uC758 \\uAE30\\uB2A5\\uC744 \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC9C0\\uB9CC, \\uC0AC\\uC774\\uD2B8\\uB97C \\uBCF4\\uB294\\uAC83\\uC5D4 \\uC774\\uC0C1\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"), __jsx(Button, {\n    onClick: socialJoin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")) : ''));\n}\n\n_s(checkSocial, \"RsWSPT2NhhzfndVohNHZDCKktGc=\");\n\ngetLayout(checkSocial, {\n  title: 'WAKAUT! 회원가입 체크',\n  description: '회원가입 체크 페이지'\n});","map":{"version":3,"sources":["C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/pages/member/check.js"],"names":["getLayout","Datas","useEffect","useState","Container","Button","checkSocial","session","msg","setMsg","dt","userid","then","res","length","location","href","socialJoin","name","email","title","description"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,oCAAtB;AACA,SAAQC,KAAR,QAAoB,0BAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAmBC,MAAnB,QAAiC,iBAAjC;AAEA,eAAe,SAASC,WAAT,OAA+B;AAAA;;AAAA,MAATC,OAAS,QAATA,OAAS;;AAAA,kBACpBJ,QAAQ,CAAC,4BAAD,CADY;AAAA,MACnCK,GADmC;AAAA,MAC/BC,MAD+B;;AAAA,WAE3BC,EAF2B;AAAA;AAAA;;AAAA;AAAA,mEAE1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACmBT,KAAK,CAAC,iBAAD,mBAA6BM,OAAO,CAACI,MAArC,EAAL,CAAoDC,IAApD,CAAyD,UAAAC,GAAG;AAAA,uBAAEA,GAAF;AAAA,eAA5D,CADnB;;AAAA;AACQA,cAAAA,GADR;;AAEI;AACA,kBAAGA,GAAG,CAACC,MAAJ,GAAW,CAAd,EAAgB;AACZC,gBAAAA,QAAQ,CAACC,IAAT,GAAc,GAAd;AACH;;AALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAF0C;AAAA;AAAA;;AAAA,WAU3BC,UAV2B;AAAA;AAAA;;AAAA;AAAA,2EAU1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUhB,KAAK,CAAC,iBAAD,mBAA6BM,OAAO,CAACI,MAArC,mBAAoDJ,OAAO,CAACW,IAA5D,oBAA0EX,OAAO,CAACY,KAAlF,EAAL,CAAgGP,IAAhG,CAAqG,UAAAC,GAAG;AAAA,uBAAEA,GAAF;AAAA,eAAxG,CADV;;AAAA;AAEIJ,cAAAA,MAAM,CAAC,mBAAD,CAAN;AACAM,cAAAA,QAAQ,CAACC,IAAT,GAAc,GAAd;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAV0C;AAAA;AAAA;;AAe1Cd,EAAAA,SAAS,CAAC,YAAI;AACVQ,IAAAA,EAAE;AACL,GAFQ,EAEP,EAFO,CAAT;AAGA,SACI,4BACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,OAAO,CAACI,MAAb,EAAqBH,GAArB,CADJ,EAGSA,GAAG,KAAG,mBAAP,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wIAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,iPADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAES,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,CADA,GAIQ,EAPhB,CADJ,CADJ;AAcH;;GAhCuBX,W;;AAiCxBN,SAAS,CAACM,WAAD,EAAa;AAACc,EAAAA,KAAK,EAAC,iBAAP;AAAyBC,EAAAA,WAAW,EAAC;AAArC,CAAb,CAAT","sourcesContent":["import getLayout from '../../components/layouts/getLayout';\r\nimport {Datas} from '../../components/feutils';\r\nimport { useEffect, useState } from 'react';\r\nimport { Container,Button } from 'react-bootstrap';\r\n\r\nexport default function checkSocial({session}){\r\n    const [msg,setMsg] =  useState('님은 인증된 사용자입니다. 메인으로 이동합니다.');\r\n    async function dt(){\r\n        let res= await Datas('/member/checked',`userid=${session.userid}`).then(res=>res);\r\n        // console.log('들어오는 데이터 확인'+res.length);\r\n        if(res.length>0){\r\n            location.href='/'\r\n        }    \r\n    }\r\n    \r\n    async function socialJoin(){\r\n        await Datas('/member/checked',`userid=${session.userid}&name=${session.name}&email=${session.email}`).then(res=>res);\r\n        setMsg(\"님은 아직 가입되지 않았습니다.\");\r\n        location.href='/'\r\n    }\r\n    useEffect(()=>{\r\n        dt();\r\n    },[])\r\n    return(\r\n        <> \r\n            <Container>\r\n                <h2>{session.userid}{msg}</h2>\r\n                {\r\n                    (msg==='님은 아직 가입되지 않았습니다.')?\r\n                    <div>\r\n                        <p>아래의 버튼을 눌러 간편하게 가입할 수 있습니다.<br />가입을 하면 글쓰기 댓글 등의 기능을 사용할 수 있지만, 사이트를 보는것엔 이상이 없습니다.</p>\r\n                        <Button onClick={socialJoin}>가입하기</Button>\r\n                    </div> :''\r\n                }\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\ngetLayout(checkSocial,{title:'WAKAUT! 회원가입 체크',description:'회원가입 체크 페이지'})"]},"metadata":{},"sourceType":"module"}