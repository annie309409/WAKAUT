{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\\\uD559\\uC5B8\\\\WAKAUT\\\\next\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport '../styles/globals.css';\nimport '../styles/boot-added.css';\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport App from \"next/app\"; // import {getSession} from \"next-auth/client\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  var _Component$getLayout;\n\n  const router = useRouter();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {}, []);\n  const getLayout = (_Component$getLayout = Component.getLayout) !== null && _Component$getLayout !== void 0 ? _Component$getLayout : page => page;\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, getLayout(__jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 20\n    }\n  }))));\n} // MyApp.getInitialProps = async (ctx)=>{\n//   // next app의 기본 props객체 초기화\n//   //application단위의 전역변수\n//   const appProps = await App.getInitialProps(ctx);\n//   // const sess =await getSession(ctx);\n//   // appProps.menu = menu;\n//   return {...appProps};\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/pc/Desktop/학언/WAKAUT/next/pages/_app.js"],"names":["React","useState","useEffect","App","MyApp","Component","pageProps","router","useRouter","loading","setLoading","getLayout","page"],"mappings":";;;;;AAAA,OAAO,uBAAP;AACA,OAAO,0BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,OAAOC,GAAP,MAAgB,UAAhB,C,CACA;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AAAA;;AACvC,QAAMC,MAAM,GAAGC,SAAS,EAAxB;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAASC;AAAT,MAAuBT,QAAQ,CAAC,IAAD,CAArC;AACAC,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEP,EAFO,CAAT;AAGA,QAAMS,SAAS,2BAAIN,SAAS,CAACM,SAAd,uEAA6BC,IAAD,IAAQA,IAAnD;AACA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,SAAS,CAAE,MAAC,SAAD,eAAeL,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF,CADb,CADF;AAKD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeF,KAAf","sourcesContent":["import '../styles/globals.css';\r\nimport '../styles/boot-added.css';\r\nimport React from \"react\";\r\nimport { useState,useEffect } from 'react';\r\nimport App from \"next/app\";\r\n// import {getSession} from \"next-auth/client\";\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  const router = useRouter();\r\n  const [loading,setLoading] = useState(true);\r\n  useEffect(()=>{\r\n    \r\n  },[])\r\n  const getLayout =  Component.getLayout ?? ((page)=>page);\r\n  return (\r\n    <React.Fragment>\r\n      { getLayout( <Component {...pageProps} /> )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n// MyApp.getInitialProps = async (ctx)=>{\r\n//   // next app의 기본 props객체 초기화\r\n//   //application단위의 전역변수\r\n//   const appProps = await App.getInitialProps(ctx);\r\n//   // const sess =await getSession(ctx);\r\n//   // appProps.menu = menu;\r\n//   return {...appProps};\r\n// }\r\nexport default MyApp\r\n"]},"metadata":{},"sourceType":"module"}