{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\\\uD559\\uC5B8\\\\WAKAUT\\\\next\\\\components\\\\modify_radio.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Container, Form } from \"react-bootstrap\";\nimport Col from \"react-bootstrap/Col\";\nimport { useState } from \"react\";\n\nvar ModifyRadio = function ModifyRadio(props) {\n  _s();\n\n  var _useState = useState(null),\n      checkedValue = _useState[0],\n      setCheckedValue = _useState[1];\n\n  var _useState2 = useState(checkedValue),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1]; // 라디오 버튼 현재 값을 저장\n\n\n  var handleRadioChange = function handleRadioChange(event) {\n    setCheckedValue(event.target.value);\n    setSelectedValue(event.target.value);\n  };\n\n  var isChecked = function isChecked(e) {\n    var value = e.target.value; // 선택된 값이 이전에 선택된 값과 같으면 해제하고, 그렇지 않으면 선택함\n\n    setSelectedValue(value === checkedValue ? null : value);\n  };\n\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, !props.notype ? __jsx(Form, {\n    className: \"radio-frm1 d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Label, {\n    className: \"radio-type\",\n    size: \"lg\",\n    column: true,\n    lg: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, props.type), __jsx(Col, {\n    lg: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, props.radioval.map(function (val) {\n    return __jsx(Form.Check, {\n      className: \"radio-btn\",\n      type: \"radio\",\n      inline: true,\n      key: val,\n      label: val,\n      value: val,\n      checked: selectedValue === val,\n      onChange: handleRadioChange,\n      onClick: isChecked,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    });\n  }), props.termsview ? __jsx(\"span\", {\n    className: \"terms\",\n    onClick: function onClick() {\n      return props.setLgShow(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, props.termsview) : false)) : __jsx(Form, {\n    className: \"d-flex radio-frm2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, props.message.map(function (val2) {\n    return __jsx(Form.Check, {\n      className: \"radio-btn\",\n      type: \"radio\",\n      inline: true,\n      key: val2,\n      label: val2,\n      value: val2,\n      checked: selectedValue === val2,\n      onChange: handleRadioChange,\n      onClick: isChecked,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    });\n  })));\n};\n\n_s(ModifyRadio, \"7twvg6sJq32mZtYjQDk3ni2FSBM=\");\n\n_c = ModifyRadio;\nexport default ModifyRadio;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModifyRadio\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/학언/WAKAUT/next/components/modify_radio.js"],"names":["Container","Form","Col","useState","ModifyRadio","props","checkedValue","setCheckedValue","selectedValue","setSelectedValue","handleRadioChange","event","target","value","isChecked","e","notype","type","radioval","map","val","termsview","setLgShow","message","val2"],"mappings":"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","sourcesContent":["import {Container, Form} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {useState} from \"react\";\r\n\r\nconst ModifyRadio = (props) => {\r\n    const [checkedValue, setCheckedValue] = useState(null);\r\n    const [selectedValue, setSelectedValue] = useState(checkedValue); // 라디오 버튼 현재 값을 저장\r\n\r\n    const handleRadioChange = (event) => {\r\n        setCheckedValue(event.target.value);\r\n        setSelectedValue(event.target.value);\r\n    }\r\n\r\n    const isChecked = (e) => {\r\n        const value = e.target.value;\r\n        // 선택된 값이 이전에 선택된 값과 같으면 해제하고, 그렇지 않으면 선택함\r\n        setSelectedValue(value === checkedValue ? null : value);\r\n    }\r\n\r\n    return(\r\n    <Container>\r\n    {(!props.notype) ?\r\n    <Form className=\"radio-frm1 d-flex\">\r\n        <Form.Label className=\"radio-type\"\r\n                    size=\"lg\" column lg={2}>{props.type}</Form.Label>\r\n        <Col lg={7}>\r\n            {props.radioval.map((val) => (\r\n            <Form.Check className=\"radio-btn\"\r\n                type='radio'\r\n                inline\r\n                key={val}\r\n                label={val}\r\n                value={val}\r\n                checked={selectedValue === val}\r\n                onChange={handleRadioChange}\r\n                onClick={isChecked}\r\n            />))}\r\n            {(props.termsview)\r\n                ?\r\n                <span className=\"terms\" onClick={()=>props.setLgShow(true)}>\r\n                    {props.termsview}</span>\r\n                :\r\n                false}\r\n        </Col>\r\n    </Form>\r\n\r\n    :\r\n\r\n    <Form className=\"d-flex radio-frm2\">\r\n        {props.message.map((val2) => (\r\n        <Form.Check className=\"radio-btn\"\r\n            type='radio'\r\n            inline\r\n            key={val2}\r\n            label={val2}\r\n            value={val2}\r\n            checked={selectedValue === val2}\r\n            onChange={handleRadioChange}\r\n            onClick={isChecked}\r\n        />))}\r\n    </Form>\r\n    }\r\n    </Container>\r\n    )\r\n}\r\nexport default ModifyRadio"]},"metadata":{},"sourceType":"module"}