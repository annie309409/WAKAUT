{"ast":null,"code":"// npm install next-auth@3.29.10 --save-dev\nimport NextAuth from \"next-auth\";\nimport Credentials from 'next-auth/providers/credentials';\nimport axios from \"axios\";\nimport KakaoProvider from 'next-auth/providers/kakao';\nexport default NextAuth({\n  providers: [KakaoProvider({\n    clientId: process.env.KAKAO_CLIENT_ID || '',\n    clientSecret: 'ERMSDHsOwUhONXGC0PQlgp4jNQnUNdp0' || ''\n  }, function () {\n    console.log('성공!');\n  }), Credentials({\n    id: \"userid-passwd-credentials\",\n    name: \"userid-passwd-credentials\",\n    credentials: {\n      userid: {\n        label: \"아이디\",\n        type: \"text\"\n      },\n      passwd: {\n        label: \"비밀번호\",\n        type: \"password\"\n      }\n    },\n\n    // 로그인 폼 정의\n    async authorize(credentials, req) {\n      const userid = credentials.userid;\n      const passwd = credentials.passwd; // 인증 확인\n\n      let params = [userid, passwd];\n      let url = `http://localhost:3000/api/users/login?userid=${params[0]}&passwd=${params[1]}`;\n      const res = await axios.get(url);\n      const result = await res.data; // 인증 성공시 반환\n\n      if ((await result).uid > 0) {\n        return result;\n      }\n    }\n\n  })],\n  pages: {\n    // 인증에 사용자 정의 로그인 페이지 사용\n    signIn: '/member/login'\n  },\n  callbacks: {\n    async jwt(token, user, account, profile, isNewUser) {\n      if (user !== null && user !== void 0 && user.userid) token.userid = user.userid;\n      return token;\n    },\n\n    async session(session, userOrToken) {\n      userOrToken.userid ? session.user.userid = userOrToken.userid : session.user.userid = parseInt(userOrToken.sub);\n      console.log('세션값', session);\n      return session;\n    }\n\n  }\n});","map":null,"metadata":{},"sourceType":"module"}