{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fullstack\\\\Desktop\\\\TeamWorks\\\\WAKAUT\\\\next\\\\pages\\\\board\\\\boardlist.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Alerts from '../../components/alert';\nimport Search from '../../components/search';\nimport { Container } from 'react-bootstrap';\nimport List from '../../components/list';\nimport WriteModal from './write_modal';\nimport getLayout from '../../components/layouts/getLayout';\nimport { Datas } from '../../components/feutils';\nimport { BarLoader } from \"react-spinners\"; //처음 데이터 세팅\n\nexport async function getServerSideProps(ctx) {\n  let boards = await Datas('/board/boardlist', 'pg=5'); // 운동목록 리스트 가져오기\n\n  let atlists = await Datas(`/main?lists=y`);\n  return {\n    props: {\n      boards,\n      atlists\n    }\n  };\n}\n\nconst BoardList = ({\n  boards,\n  session,\n  atlists\n}) => {\n  let {\n    0: dtfn,\n    1: setDtfn\n  } = useState(boards.boards);\n  let {\n    0: cnt,\n    1: setCnt\n  } = useState(2);\n  const {\n    0: lgShow,\n    1: setLgShow\n  } = useState(false);\n  const {\n    0: selVal,\n    1: setSelval\n  } = useState('All');\n  const {\n    0: srhVal,\n    1: setSrhVal\n  } = useState('');\n  const {\n    0: srch,\n    1: setSrch\n  } = useState(false);\n  const {\n    0: uid,\n    1: setUid\n  } = useState(session.userid);\n\n  async function selId(uid) {\n    let res = await Datas('/board/boardlist', `userid=${uid}`).then(res => res);\n    return await res;\n  }\n\n  if (uid > 1000000000) {\n    let test = selId(uid);\n\n    async function tt() {\n      setUid((await test)[0].uid);\n    }\n\n    tt();\n  } //스크롤 페이징 처리\n\n\n  async function handleScroll() {\n    const scrollHeight = document.documentElement.scrollHeight;\n    const scrollTop = document.documentElement.scrollTop;\n    const clientHeight = document.documentElement.clientHeight;\n\n    if (scrollTop + clientHeight >= scrollHeight) {\n      setCnt(cnt + 1);\n      let dt = await dts(cnt * 5);\n      setDtfn(dt);\n    }\n  } // 스크롤 페이징 데이터 불러오기\n\n\n  async function dts(i) {\n    let res = await Datas('/board/boardlist', `pg=${i}&cat=${selVal}&note=${srhVal}`).then(res => res);\n    return await res.boards;\n  } //검색 시 액션\n\n\n  async function sc() {\n    setSrch(true);\n    dts(5);\n  } //스크롤 이벤트 등록\n\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, {\n      capture: true\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll, {\n        capture: true\n      });\n    };\n  });\n  return __jsx(React.Fragment, null, __jsx(Alerts, {\n    color: \"success\",\n    msg: \"\\uD574\\uB2F9 \\uAC8C\\uC2DC\\uD310\\uC740 \\uAD00\\uB9AC\\uC790\\uC5D0\\uC758\\uD574 \\uC2E4\\uC2DC\\uAC04 \\uAD00\\uB9AC\\uB418\\uACE0\\uC788\\uC2B5\\uB2C8\\uB2E4. \\uD5C8\\uC704\\uC0AC\\uC2E4\\uC720\\uD3EC \\uBC0F \\uBD80\\uC801\\uC808\\uD55C \\uD45C\\uD604\\uC740 \\uCC28\\uB2E8\\uB420 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), session.userid != 0 ? __jsx(Search, {\n    cat: ['commnunity', 'review'],\n    title: \"All\",\n    btn: ['검색하기', '새글쓰기'],\n    btncol: ['secondary', 'success'],\n    click: [sc, () => {\n      setLgShow(true);\n    }],\n    setSelval: setSelval,\n    setSrhVal: setSrhVal,\n    srhVal: srhVal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }) : __jsx(Search, {\n    cat: ['commnunity', 'review'],\n    title: \"All\",\n    btn: ['검색하기'],\n    btncol: ['secondary'],\n    click: [sc],\n    setSelval: setSelval,\n    setSrhVal: setSrhVal,\n    srhVal: srhVal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), __jsx(Container, {\n    className: \"lists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, dtfn.map((m, idx) => {\n    return __jsx(List, {\n      key: idx,\n      title: m.title,\n      note: m.content,\n      malcnt: m.cmtcnt,\n      img: true,\n      col: \"bg-warning\",\n      time: m.regdate2,\n      kd: m.category,\n      view: m.views,\n      to: `/board/boardview?bid=${m.bid}`,\n      name: m.name,\n      cat: m.facility_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 28\n      }\n    });\n  }), __jsx(\"div\", {\n    className: \"pg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, __jsx(BarLoader, {\n    color: \"#ccc\",\n    cssOverride: {\n      position: \"absolute\",\n      margin: \"auto\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: 555\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }))), __jsx(WriteModal, {\n    lgShow: lgShow,\n    setLgShow: setLgShow,\n    sename: session.name,\n    seid: uid,\n    atlists: atlists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }));\n};\n\ngetLayout(BoardList, {\n  title: '다같이 운동해요! WAKAUT!',\n  description: '워크아웃 커뮤니티 게시판입니다.'\n});\nexport default BoardList;","map":{"version":3,"sources":["C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/pages/board/boardlist.js"],"names":["useEffect","useState","Alerts","Search","Container","List","WriteModal","getLayout","Datas","BarLoader","getServerSideProps","ctx","boards","atlists","props","BoardList","session","dtfn","setDtfn","cnt","setCnt","lgShow","setLgShow","selVal","setSelval","srhVal","setSrhVal","srch","setSrch","uid","setUid","userid","selId","res","then","test","tt","handleScroll","scrollHeight","document","documentElement","scrollTop","clientHeight","dt","dts","i","sc","window","addEventListener","capture","removeEventListener","map","m","idx","title","content","cmtcnt","regdate2","category","views","bid","name","facility_name","position","margin","top","left","right","bottom","zIndex","description"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Alerts from '../../components/alert';\r\nimport Search from '../../components/search';\r\nimport {Container} from 'react-bootstrap';\r\nimport List from '../../components/list';\r\nimport WriteModal from './write_modal';\r\nimport getLayout from '../../components/layouts/getLayout';\r\nimport {Datas} from '../../components/feutils';\r\nimport { BarLoader } from \"react-spinners\"\r\n\r\n\r\n//처음 데이터 세팅\r\nexport async function getServerSideProps(ctx){\r\n    let boards = await Datas('/board/boardlist','pg=5');\r\n      // 운동목록 리스트 가져오기\r\n    let atlists = await Datas(`/main?lists=y`);\r\n    return{props:{boards,atlists}};   \r\n}\r\n\r\nconst BoardList=({boards,session,atlists})=>{\r\n    let [dtfn,setDtfn] = useState(boards.boards);\r\n    let [cnt,setCnt] = useState(2);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [selVal, setSelval] = useState('All');\r\n    const [srhVal, setSrhVal] = useState('');\r\n    const [srch,setSrch] = useState(false);\r\n    const [uid,setUid] = useState(session.userid);\r\n    \r\n    async function selId (uid){\r\n        let res = await Datas('/board/boardlist',`userid=${uid}`).then(res=>res);\r\n        return await res;\r\n    }\r\n    \r\n    if(uid>1000000000){\r\n        let test = selId(uid);\r\n        async function tt(){\r\n            setUid((await test)[0].uid);\r\n        }\r\n        tt();\r\n    }\r\n\r\n    //스크롤 페이징 처리\r\n    async function handleScroll(){\r\n        const scrollHeight = document.documentElement.scrollHeight;\r\n        const scrollTop = document.documentElement.scrollTop;\r\n        const clientHeight = document.documentElement.clientHeight;\r\n        if (scrollTop + clientHeight >= scrollHeight) {\r\n            setCnt(cnt+1);\r\n            let dt = await dts(cnt*5);\r\n            setDtfn(dt);\r\n        }\r\n    }\r\n\r\n    // 스크롤 페이징 데이터 불러오기\r\n    async function dts(i){\r\n        let res = await Datas('/board/boardlist',`pg=${i}&cat=${selVal}&note=${srhVal}`).then(res=>res);\r\n        return await res.boards;\r\n    }\r\n\r\n    //검색 시 액션\r\n    async function sc(){\r\n        setSrch(true);\r\n        dts(5);\r\n    }\r\n    //스크롤 이벤트 등록\r\n    useEffect(()=>{\r\n        window.addEventListener('scroll', handleScroll, { capture: true });\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\",handleScroll,{ capture: true });\r\n        }\r\n    })\r\n\r\n    return(\r\n        <>\r\n        <Alerts color='success' msg='해당 게시판은 관리자에의해 실시간 관리되고있습니다. 허위사실유포 및 부적절한 표현은 차단될 수 있습니다.'/>\r\n        {\r\n        (session.userid !=0)?\r\n        <Search cat={['commnunity','review']} title='All' btn={['검색하기','새글쓰기']} btncol={['secondary','success']} click={[sc,()=>{setLgShow(true)}]} setSelval={setSelval} setSrhVal={setSrhVal} srhVal={srhVal}/>:\r\n        <Search cat={['commnunity','review']} title='All' btn={['검색하기']} btncol={['secondary']} click={[sc]} setSelval={setSelval} setSrhVal={setSrhVal} srhVal={srhVal}/>\r\n        }\r\n        <Container className=\"lists\">\r\n            {\r\n                dtfn.map((m,idx)=>{\r\n                    return <List key={idx} title={m.title} note={m.content} malcnt={m.cmtcnt} img={true} col='bg-warning' time={m.regdate2} kd={m.category} view={m.views} to={`/board/boardview?bid=${m.bid}`} name={m.name} cat={m.facility_name} />\r\n                })\r\n            }\r\n            <div className=\"pg\">\r\n                <BarLoader color=\"#ccc\" cssOverride={{position: \"absolute\", margin:\"auto\", top:0,left:0, right:0, bottom:0,zIndex:555}} />\r\n            </div>\r\n        </Container>\r\n        <WriteModal lgShow={lgShow} setLgShow={setLgShow} sename={session.name} seid={uid} atlists={atlists}/>\r\n        </>\r\n    )\r\n}\r\n\r\ngetLayout(BoardList,{title:'다같이 운동해요! WAKAUT!',description:'워크아웃 커뮤니티 게시판입니다.'})\r\nexport default BoardList;\r\n"]},"metadata":{},"sourceType":"module"}