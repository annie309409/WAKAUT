{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport List from \"../../components/list\";\nimport Link from \"next/link\";\nimport { useState } from 'react';\nimport WriteModal from \"./write_modal\";\nimport Mgmodal from \"../../components/mgmodal\";\nimport getLayout from '../../components/layouts/getLayout';\nimport { Datas, Post, handleInput } from '../../components/feutils';\nvar title = '';\nvar contents = ''; //데이터 끌고오기!\n\nvar Boardview = function Boardview(_ref) {\n  var boards = _ref.boards,\n      session = _ref.session;\n\n  var _useState = useState(false),\n      lgShow = _useState[0],\n      setLgShow = _useState[1];\n\n  var _useState2 = useState(false),\n      mgShow = _useState2[0],\n      setMgShow = _useState2[1];\n\n  var _useState3 = useState(),\n      reply = _useState3[0],\n      setReply = _useState3[1];\n\n  var _useState4 = useState(boards[0].com),\n      cmts = _useState4[0],\n      setCmts = _useState4[1];\n\n  var _useState5 = useState(false),\n      cnfirm = _useState5[0],\n      setCnfirm = _useState5[1];\n\n  var bd = boards[0]; //데이터 등록하기\n\n  function write(_x, _x2) {\n    return _write.apply(this, arguments);\n  } //등록 후 끌고오기\n\n\n  function _write() {\n    _write = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e, _ref2) {\n      var bid, userid, comment, dt;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              bid = _ref2.bid, userid = _ref2.userid, comment = _ref2.comment;\n              e.preventDefault();\n\n              if (!(reply != '')) {\n                _context2.next = 12;\n                break;\n              }\n\n              dt = Post({\n                bid: bid,\n                userid: userid,\n                comment: comment\n              }, '/board/repwrite').then(function (r) {\n                return r;\n              });\n              _context2.next = 6;\n              return dt;\n\n            case 6:\n              _context2.t0 = _context2.sent.cnt;\n\n              if (!(_context2.t0 > 0)) {\n                _context2.next = 9;\n                break;\n              }\n\n              dts();\n\n            case 9:\n              setReply('');\n              _context2.next = 13;\n              break;\n\n            case 12:\n              alert('아무것도 입력하지 않았어요😥');\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _write.apply(this, arguments);\n  }\n\n  function dts() {\n    return _dts.apply(this, arguments);\n  } //리플 삭제하기\n\n\n  function _dts() {\n    _dts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Datas(\"/board/boardview\", \"bid=\".concat(bd.bid));\n\n            case 2:\n              res = _context3.sent;\n              setCmts(res[0].com);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _dts.apply(this, arguments);\n  }\n\n  function del(cid) {\n    Post({\n      cid: cid\n    }, '/board/repwrite');\n    dts();\n  } //게시글 삭제하기\n\n\n  if (cnfirm) {\n    var delBD = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var dt;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dt = Post({\n                  bid: bd.bid\n                }, '/board/delete').then(function (r) {\n                  return r;\n                });\n                _context.next = 3;\n                return dt;\n\n              case 3:\n                _context.t0 = _context.sent.cnt;\n\n                if (!(_context.t0 > 0)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                location.href = 'http://localhost:3000/board/boardlist';\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function delBD() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    delBD();\n  }\n\n  ;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"brdview\"\n  }, __jsx(\"header\", {\n    className: \"bg-secondary pt-5 pb-4 brdview\"\n  }), __jsx(Container, null, __jsx(List, {\n    title: bd.title,\n    kd: bd.category,\n    time: bd.regdate2,\n    view: bd.views + 1,\n    name: bd.name\n  }))), __jsx(Container, null, __jsx(\"p\", {\n    className: \"viewnote\"\n  }, bd.content), __jsx(\"div\", {\n    className: \"replay p-5\"\n  }, cmts.map(function (m, idx) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"txtLft d-flex\",\n      key: idx\n    }, __jsx(\"h5\", {\n      key: m + idx + idx\n    }, m.name), __jsx(\"p\", {\n      className: \"ms-5\",\n      key: m + idx\n    }, m.comment, \" \", __jsx(\"small\", null, m.regdate2)), session.name === m.name ? __jsx(\"p\", {\n      className: \"ms-3 delRep\",\n      onClick: function onClick() {\n        del(m.cid);\n      },\n      key: m + m + idx\n    }, \"X\") : '', session.name === 'admin' ? __jsx(\"p\", {\n      className: \"ms-3 delRep\",\n      onClick: function onClick() {\n        del(m.cid);\n      },\n      key: m + m + idx\n    }, \"X\") : ''));\n  }), __jsx(Form, null, __jsx(\"div\", {\n    className: \"reTxt d-flex align-items-end mt-4\"\n  }, __jsx(Form.Control, {\n    as: \"textarea\",\n    placeholder: \"\\uB313\\uAE00\\uC740 \\uD55C\\uBC88 \\uB2EC\\uBA74 \\uC0AD\\uC81C\\uAC00 \\uBD88\\uAC00\\uB2A5\\uD558\\uB2F5\\uB2C8\\uB2F9 \\uD83D\\uDC6E\\u200D\\u2642\\uFE0F\\uD83D\\uDC6E\\u200D\\u2640\\uFE0F \",\n    style: {\n      height: '80px',\n      width: '90%'\n    },\n    value: reply,\n    onChange: function onChange(e) {\n      handleInput(setReply, e);\n    }\n  }), __jsx(\"button\", {\n    className: \"btn btn-success ms-3\",\n    type: \"submit\",\n    onClick: function onClick(e) {\n      write(e, {\n        bid: bd.bid,\n        userid: parseInt(session.userid),\n        comment: reply\n      });\n    }\n  }, \"\\uB313\\uAE00 \\uB4F1\\uB85D\")))), __jsx(\"div\", {\n    className: \"btns mt-4 mb-4 d-flex  justify-content-end\"\n  }, __jsx(Button, {\n    className: \"ms-2\",\n    variant: \"primary\"\n  }, __jsx(Link, {\n    href: \"/board/boardlist\"\n  }, \"\\uBAA9\\uB85D\\uC73C\\uB85C\")), session.name === bd.name ? __jsx(Button, {\n    className: \"ms-2\",\n    variant: \"success\",\n    onClick: function onClick() {\n      setLgShow(true);\n    }\n  }, \"\\uC218\\uC815\\uD558\\uAE30\") : '', session.name === bd.name ? __jsx(Button, {\n    className: \"ms-2\",\n    variant: \"secondary\",\n    onClick: function onClick() {\n      setMgShow(true);\n    }\n  }, \"\\uC0AD\\uC81C\\uD558\\uAE30\") : '', session.name === 'admin' ? __jsx(Button, {\n    className: \"ms-2\",\n    variant: \"danger\",\n    onClick: function onClick() {\n      setMgShow(true);\n    }\n  }, \"\\uAC15\\uC81C\\uC0AD\\uC81C\") : ''), __jsx(Mgmodal, {\n    LgShow: mgShow,\n    setLgShow: setMgShow,\n    setCnfirm: setCnfirm,\n    title: \"\\uAC8C\\uC2DC\\uAE00 \\uC0AD\\uC81C\",\n    msg: \"\\uC815\\uB9D0 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n  }), __jsx(WriteModal, {\n    title: boards[0].title,\n    note: boards[0].content,\n    bid: boards[0].bid,\n    setLgShow: setLgShow,\n    lgShow: lgShow,\n    sename: session.name,\n    seid: session.userid\n  })));\n};\n\ngetLayout(Boardview, {\n  title: title,\n  description: contents\n});\nexport var __N_SSP = true;\nexport default Boardview;","map":null,"metadata":{},"sourceType":"module"}