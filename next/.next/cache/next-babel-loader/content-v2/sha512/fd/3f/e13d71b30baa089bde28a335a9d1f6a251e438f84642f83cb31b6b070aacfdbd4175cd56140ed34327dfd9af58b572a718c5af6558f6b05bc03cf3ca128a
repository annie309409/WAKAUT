{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fullstack\\\\Desktop\\\\TeamWorks\\\\WAKAUT\\\\next\\\\pages\\\\board\\\\boardlist.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Alerts from '../../components/alert';\nimport Search from '../../components/search';\nimport { Container } from 'react-bootstrap';\nimport List from '../../components/list';\nimport WriteModal from './write_modal';\nimport getLayout from '../../components/layouts/getLayout';\nimport { Datas } from '../feutils';\nimport { BarLoader } from \"react-spinners\"; //처음 데이터 세팅\n\nexport async function getServerSideProps(ctx) {\n  let boards = await Datas('/board/boardlist', 'pg=5');\n  return {\n    props: {\n      boards\n    }\n  };\n}\n\nconst BoardList = ({\n  boards\n}) => {\n  let {\n    0: dtfn,\n    1: setDtfn\n  } = useState(boards.boards);\n  let {\n    0: cnt,\n    1: setCnt\n  } = useState(2);\n  const {\n    0: lgShow,\n    1: setLgShow\n  } = useState(false);\n  const {\n    0: selVal,\n    1: setSelval\n  } = useState('All');\n  const {\n    0: srhVal,\n    1: setSrhVal\n  } = useState('');\n  const {\n    0: srch,\n    1: setSrch\n  } = useState(false); //스크롤 페이징 처리\n\n  async function handleScroll() {\n    const scrollHeight = document.documentElement.scrollHeight;\n    const scrollTop = document.documentElement.scrollTop;\n    const clientHeight = document.documentElement.clientHeight;\n\n    if (scrollTop + clientHeight >= scrollHeight) {\n      setCnt(cnt + 1);\n      let dt = await dts(cnt * 5);\n      setDtfn(dt);\n    }\n  } // 스크롤 페이징 데이터 불러오기\n\n\n  async function dts(i, cat, word) {\n    console.log('페이징 데이터!');\n\n    if (cat != null && word != null) {\n      console.log('검색버튼 클릭 !');\n    }\n\n    let res = await Datas('/board/boardlist', `pg=${i}&cat=${selVal}&note=${srhVal}`).then(res => res);\n    return await res.boards;\n  } //검색 시 액션\n\n\n  async function sc() {\n    setSrch(true);\n    dts(5, selVal, srhVal);\n  } //스크롤 이벤트 등록\n\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, {\n      capture: true\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll, {\n        capture: true\n      });\n    };\n  });\n  return __jsx(React.Fragment, null, __jsx(Alerts, {\n    color: \"success\",\n    msg: \"\\uD574\\uB2F9 \\uAC8C\\uC2DC\\uD310\\uC740 \\uAD00\\uB9AC\\uC790\\uC5D0\\uC758\\uD574 \\uC2E4\\uC2DC\\uAC04 \\uAD00\\uB9AC\\uB418\\uACE0\\uC788\\uC2B5\\uB2C8\\uB2E4. \\uD5C8\\uC704\\uC0AC\\uC2E4\\uC720\\uD3EC \\uBC0F \\uBD80\\uC801\\uC808\\uD55C \\uD45C\\uD604\\uC740 \\uCC28\\uB2E8\\uB420 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), __jsx(Search, {\n    cat: ['commnunity', 'review'],\n    title: \"All\",\n    btn: ['검색하기', '새글쓰기'],\n    btncol: ['secondary', 'success'],\n    click: [sc, () => {\n      setLgShow(true);\n    }],\n    setSelval: setSelval,\n    setSrhVal: setSrhVal,\n    srhVal: srhVal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), __jsx(Container, {\n    className: \"lists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, dtfn.map((m, idx) => {\n    return __jsx(List, {\n      key: idx,\n      title: m.title,\n      note: m.content,\n      malcnt: m.cmtcnt,\n      img: true,\n      col: \"bg-warning\",\n      time: m.regdate2,\n      kd: m.category,\n      view: m.views,\n      to: `/board/boardview?bid=${m.bid}`,\n      name: m.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 28\n      }\n    });\n  }), __jsx(\"div\", {\n    className: \"pg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(BarLoader, {\n    color: \"#ccc\",\n    cssOverride: {\n      position: \"absolute\",\n      margin: \"auto\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: 555\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }))), __jsx(WriteModal, {\n    lgShow: lgShow,\n    setLgShow: setLgShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }));\n};\n\ngetLayout(BoardList, {\n  title: '다같이 운동해요! WAKAUT!',\n  description: '워크아웃 커뮤니티 게시판입니다.'\n});\nexport default BoardList;","map":{"version":3,"sources":["C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/pages/board/boardlist.js"],"names":["useEffect","useState","Alerts","Search","Container","List","WriteModal","getLayout","Datas","BarLoader","getServerSideProps","ctx","boards","props","BoardList","dtfn","setDtfn","cnt","setCnt","lgShow","setLgShow","selVal","setSelval","srhVal","setSrhVal","srch","setSrch","handleScroll","scrollHeight","document","documentElement","scrollTop","clientHeight","dt","dts","i","cat","word","console","log","res","then","sc","window","addEventListener","capture","removeEventListener","map","m","idx","title","content","cmtcnt","regdate2","category","views","bid","name","position","margin","top","left","right","bottom","zIndex","description"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Alerts from '../../components/alert';\r\nimport Search from '../../components/search';\r\nimport {Container} from 'react-bootstrap';\r\nimport List from '../../components/list';\r\nimport WriteModal from './write_modal';\r\nimport getLayout from '../../components/layouts/getLayout';\r\nimport {Datas} from '../feutils';\r\nimport { BarLoader } from \"react-spinners\"\r\n\r\n\r\n//처음 데이터 세팅\r\nexport async function getServerSideProps(ctx){\r\n    let boards = await Datas('/board/boardlist','pg=5');\r\n    return{props:{boards}};   \r\n}\r\n\r\nconst BoardList=({boards})=>{\r\n    let [dtfn,setDtfn] = useState(boards.boards);\r\n    let [cnt,setCnt] = useState(2);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [selVal, setSelval] = useState('All');\r\n    const [srhVal, setSrhVal] = useState('');\r\n    const [srch,setSrch] = useState(false);\r\n\r\n    //스크롤 페이징 처리\r\n    async function handleScroll(){\r\n        const scrollHeight = document.documentElement.scrollHeight;\r\n        const scrollTop = document.documentElement.scrollTop;\r\n        const clientHeight = document.documentElement.clientHeight;\r\n        if (scrollTop + clientHeight >= scrollHeight) {\r\n            setCnt(cnt+1);\r\n            let dt = await dts(cnt*5);\r\n            setDtfn(dt);\r\n        }\r\n    }\r\n\r\n    // 스크롤 페이징 데이터 불러오기\r\n    async function dts(i,cat,word){\r\n        console.log('페이징 데이터!');\r\n        if(cat != null && word != null){\r\n            console.log('검색버튼 클릭 !');\r\n        }\r\n        let res = await Datas('/board/boardlist',`pg=${i}&cat=${selVal}&note=${srhVal}`).then(res=>res);\r\n        return await res.boards;\r\n    }\r\n\r\n    //검색 시 액션\r\n    async function sc(){\r\n        setSrch(true);\r\n        dts(5,selVal,srhVal);\r\n    }\r\n    //스크롤 이벤트 등록\r\n    useEffect(()=>{\r\n        window.addEventListener('scroll', handleScroll, { capture: true });\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\",handleScroll,{ capture: true });\r\n        }\r\n    })\r\n\r\n    return(\r\n        <>\r\n        <Alerts color='success' msg='해당 게시판은 관리자에의해 실시간 관리되고있습니다. 허위사실유포 및 부적절한 표현은 차단될 수 있습니다.'/>\r\n        <Search cat={['commnunity','review']} title='All' btn={['검색하기','새글쓰기']} btncol={['secondary','success']} click={[sc,()=>{setLgShow(true)}]} setSelval={setSelval} setSrhVal={setSrhVal} srhVal={srhVal}/>\r\n        <Container className=\"lists\">\r\n            {\r\n                dtfn.map((m,idx)=>{\r\n                    return <List key={idx} title={m.title} note={m.content} malcnt={m.cmtcnt} img={true} col='bg-warning' time={m.regdate2} kd={m.category} view={m.views} to={`/board/boardview?bid=${m.bid}`} name={m.name} />\r\n                })\r\n            }\r\n            <div className=\"pg\">\r\n                <BarLoader color=\"#ccc\" cssOverride={{position: \"absolute\", margin:\"auto\", top:0,left:0, right:0, bottom:0,zIndex:555}} />\r\n            </div>\r\n        </Container>\r\n        <WriteModal lgShow={lgShow} setLgShow={setLgShow}/>\r\n        </>\r\n    )\r\n}\r\n\r\ngetLayout(BoardList,{title:'다같이 운동해요! WAKAUT!',description:'워크아웃 커뮤니티 게시판입니다.'})\r\nexport default BoardList;\r\n"]},"metadata":{},"sourceType":"module"}