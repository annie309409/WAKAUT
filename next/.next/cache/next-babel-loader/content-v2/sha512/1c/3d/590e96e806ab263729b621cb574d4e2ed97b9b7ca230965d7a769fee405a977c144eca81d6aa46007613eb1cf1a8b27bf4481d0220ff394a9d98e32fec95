{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\\\uD559\\uC5B8\\\\WAKAUT\\\\WAKAUT\\\\next\\\\components\\\\modify_radio.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport Col from \"react-bootstrap/Col\";\nimport { useEffect, useState } from \"react\";\n\nconst ModifyRadio = props => {\n  const {\n    0: selectedGender,\n    1: setSelectedGender\n  } = useState(props.checked === '남자' ? '남자' : '여자');\n  const {\n    0: selectedAgree1,\n    1: setSelectedAgree1\n  } = useState(props.agree1 === 1 ? true : false);\n  const {\n    0: selectedAgree2,\n    1: setSelectedAgree2\n  } = useState(props.agree2 === 1 ? true : false);\n\n  const handleRadioChange = e => {\n    const val = e.target.value;\n    const isChecked = e.target.checked;\n\n    if (val === '여자' || val === '남자') {\n      setSelectedGender(val);\n      props.onChange(val);\n    } else if (val === '개인정보 수집 이용 동의(선택)') {\n      setSelectedAgree1(isChecked);\n      props.onChange(isChecked ? 1 : 0);\n    } else if (val === '광고성 정보, 혜택 등 수신 동의(선택)') {\n      setSelectedAgree2(isChecked);\n      props.onChange(isChecked ? 1 : 0);\n    }\n  };\n\n  useEffect(() => {\n    setSelectedAgree1(props.agree1 === 1 ? true : false);\n    setSelectedAgree2(props.agree2 === 1 ? true : false);\n  }, [props.agree1, props.agree2]); // 회원정보 수정 버튼을 누르면 부모컴포넌트의 handleSubmit 함수 호출\n\n  const handleModify = () => {\n    props.handleModify(props.userid, props.passwd1, props.passwd2, props.passwd3, props.name, props.email, props.phone, props.gen, props.birth, props.agr1, props.agr2);\n  };\n\n  const handleLeave = () => {\n    props.handleLeave();\n  };\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, !props.notype ? __jsx(Form, {\n    className: \"radio-frm1 d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    className: \"radio-type\",\n    size: \"lg\",\n    column: true,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, props.type), __jsx(Col, {\n    lg: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, props.type === \"성별\" ? props.radioval.map(val => __jsx(Form.Check, {\n    className: \"radio-btn\",\n    type: \"radio\",\n    inline: true,\n    key: val,\n    label: val,\n    value: val,\n    name: props.type,\n    defaultChecked: selectedGender === '남자' && val === '남자' || selectedGender === '여자' && val === '여자',\n    onChange: handleRadioChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  })) : null, props.type !== \"성별\" ? __jsx(Form.Check, {\n    className: \"radio-btn\",\n    type: \"checkbox\",\n    inline: true,\n    label: props.radioval,\n    value: props.radioval,\n    defaultChecked: selectedAgree1 === true && props.radioval === '개인정보 수집 이용 동의(선택)' || selectedAgree2 === true && props.radioval === \"광고성 정보, 혜택 등 수신 동의(선택)\",\n    onChange: handleRadioChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }) : null, props.termsview ? __jsx(\"span\", {\n    className: \"terms\",\n    onClick: () => props.setLgShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, props.termsview) : false)) : __jsx(\"div\", {\n    className: \"mod-btn-container d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, props.btn.map(btn => __jsx(Button, {\n    key: btn.value,\n    className: btn.className,\n    variant: btn.variant,\n    onClick: e => {\n      e.preventDefault();\n\n      if (btn.value === \"회원정보 수정\") {\n        handleModify();\n      } else {\n        handleLeave();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, btn.value))));\n};\n\nexport default ModifyRadio;","map":{"version":3,"sources":["C:/Users/pc/Desktop/학언/WAKAUT/WAKAUT/next/components/modify_radio.js"],"names":["Button","Container","Form","Col","useEffect","useState","ModifyRadio","props","selectedGender","setSelectedGender","checked","selectedAgree1","setSelectedAgree1","agree1","selectedAgree2","setSelectedAgree2","agree2","handleRadioChange","e","val","target","value","isChecked","onChange","handleModify","userid","passwd1","passwd2","passwd3","name","email","phone","gen","birth","agr1","agr2","handleLeave","notype","type","radioval","map","termsview","setLgShow","btn","className","variant","preventDefault"],"mappings":"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","sourcesContent":["import {Button, Container, Form} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst ModifyRadio = (props) => {\r\n\r\n    const [selectedGender, setSelectedGender] = useState(props.checked === '남자' ? '남자' : '여자');\r\n    const [selectedAgree1, setSelectedAgree1] = useState(props.agree1 === 1 ? true : false);\r\n    const [selectedAgree2, setSelectedAgree2] = useState(props.agree2 === 1 ? true : false);\r\n\r\n\r\n    const handleRadioChange = (e) => {\r\n        const val = e.target.value;\r\n        const isChecked = e.target.checked;\r\n\r\n        if (val === '여자' || val === '남자') {\r\n            setSelectedGender(val);\r\n            props.onChange(val);\r\n        } else if (val === '개인정보 수집 이용 동의(선택)') {\r\n            setSelectedAgree1(isChecked );\r\n            props.onChange(isChecked ? 1 : 0);\r\n        } else if (val === '광고성 정보, 혜택 등 수신 동의(선택)') {\r\n            setSelectedAgree2(isChecked);\r\n            props.onChange(isChecked ? 1 : 0);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setSelectedAgree1(props.agree1 === 1 ? true : false);\r\n        setSelectedAgree2(props.agree2 === 1 ? true : false);\r\n    }, [props.agree1, props.agree2]);\r\n\r\n    // 회원정보 수정 버튼을 누르면 부모컴포넌트의 handleSubmit 함수 호출\r\n    const handleModify = () => {\r\n        props.handleModify(\r\n            props.userid,\r\n            props.passwd1,\r\n            props.passwd2,\r\n            props.passwd3,\r\n            props.name,\r\n            props.email,\r\n            props.phone,\r\n            props.gen,\r\n            props.birth,\r\n            props.agr1,\r\n            props.agr2\r\n        );\r\n    };\r\n\r\n    const handleLeave = () => {\r\n        props.handleLeave();\r\n    };\r\n    return(\r\n        <Container>\r\n            {(!props.notype)\r\n                ?\r\n                <Form className=\"radio-frm1 d-flex\">\r\n                    <Form.Label className=\"radio-type\" size=\"lg\" column lg={2}>{props.type}</Form.Label>\r\n\r\n                    <Col lg={7}>\r\n                        {(props.type===\"성별\")\r\n                            ?\r\n                            props.radioval.map((val) => (\r\n                                <Form.Check className=\"radio-btn\"\r\n                                            type='radio'\r\n                                            inline\r\n                                            key={val}\r\n                                            label={val}\r\n                                            value={val}\r\n                                            name={props.type}\r\n                                            defaultChecked={\r\n                                                (selectedGender === '남자' && val === '남자') ||\r\n                                                (selectedGender === '여자' && val === '여자')\r\n                                            }\r\n                                            onChange={handleRadioChange}\r\n                                />\r\n                            ))\r\n                            :\r\n                            null}\r\n\r\n                        {props.type !== \"성별\"\r\n                            ?\r\n                            (\r\n                                <Form.Check\r\n                                    className=\"radio-btn\"\r\n                                    type=\"checkbox\"\r\n                                    inline\r\n                                    label={props.radioval}\r\n                                    value={props.radioval}\r\n                                    defaultChecked={\r\n                                        (selectedAgree1 === true && props.radioval === '개인정보 수집 이용 동의(선택)') ||\r\n                                        (selectedAgree2 === true && props.radioval === \"광고성 정보, 혜택 등 수신 동의(선택)\")\r\n                                    }\r\n                                    onChange={handleRadioChange}\r\n                                />\r\n                            )\r\n                            :\r\n                            null}\r\n\r\n\r\n                        {(props.termsview)\r\n                            ?\r\n                            <span className=\"terms\" onClick={()=>props.setLgShow(true)}>\r\n                           {props.termsview}\r\n                            </span>\r\n                            :\r\n                            false\r\n                        }\r\n                    </Col>\r\n\r\n                </Form>\r\n\r\n                :\r\n\r\n                <div className='mod-btn-container d-flex'>\r\n                    {props.btn.map((btn) => (\r\n                        <Button\r\n                            key={btn.value}\r\n                            className={btn.className}\r\n                            variant={btn.variant}\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                if (btn.value === \"회원정보 수정\") {\r\n                                    handleModify();\r\n                                } else {\r\n                                    handleLeave();\r\n                                }\r\n                            }}\r\n                        >\r\n                           {btn.value}\r\n                        </Button>\r\n                    ))}\r\n                </div>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\nexport default ModifyRadio;"]},"metadata":{},"sourceType":"module"}