{"ast":null,"code":"var _toConsumableArray = require(\"C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/node_modules/@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// index.js에서 사용되는 함수들\n// 전체시설보기 눌렀을때 재렌더링\nvar handleShowAll = function handleShowAll() {\n  location.href = \"/\";\n}; // 시설구분명 선택 시 state 업데이트\n\n\nvar handleFacilityChange = function handleFacilityChange(e, setSelectedFacility) {\n  setSelectedFacility(e.target.value);\n}; // 시군명 선택 시 시설구분명 셀렉트 태그 업데이트 및 지도 중심좌표 설정\n\n\nvar handleSigunChange = function handleSigunChange(e, setSelectedSigun, setSelectedFacility, setSearchText, items, setState, setSearchResults, setSearchCount) {\n  setSelectedSigun(e.target.value);\n  setSelectedFacility(\"\");\n  setSearchText(\"\"); // 시설 데이터 중 첫번째 시설의 위도와 경도 정보 가져오기\n\n  var firstFacility = items.find(function (item) {\n    return item.SIGUN_NM === e.target.value;\n  });\n\n  if (firstFacility) {\n    var lat = parseFloat(firstFacility.REFINE_WGS84_LAT);\n    var lng = parseFloat(firstFacility.REFINE_WGS84_LOGT); // 위도와 경도 정보로 중심 좌표 설정\n\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        center: {\n          lat: lat,\n          lng: lng\n        }\n      });\n    });\n  } // 검색 결과 초기화\n\n\n  setSearchResults([]);\n  setSearchCount(0);\n}; // 검색어 입력 시 state 업데이트\n\n\nvar handleSearchTextChange = function handleSearchTextChange(e, setSearchText, setSearchResults, setSearchCount, setIsButtonActive) {\n  setSearchText(e.target.value); // 검색 결과 초기화\n\n  setSearchResults([]);\n  setSearchCount(0);\n  setIsButtonActive(Boolean(e.target.value));\n};\n\nvar handleSearchButtonClick = function handleSearchButtonClick(items, selectedSigun, selectedFacility, searchText, setShow, setSearchResults, setSearchCount) {\n  // items 객체 복사\n  var results = _toConsumableArray(items); // 선택된 시군명이 있다면, 해당 시군명에 해당하는 시설들만 필터링\n\n\n  if (selectedSigun) {\n    results = results.filter(function (item) {\n      return item.SIGUN_NM === selectedSigun;\n    });\n  } // 선택된 시설구분명이 있다면, 해당 시설구분명에 해당하는 시설들만 필터링\n\n\n  if (selectedFacility) {\n    results = results.filter(function (item) {\n      return item.FACLT_DIV_NM === selectedFacility;\n    });\n  } // 검색어가 있다면, 시설명이 해당 검색어를 포함하는 시설들만 필터링\n\n\n  if (searchText) {\n    results = results.filter(function (item) {\n      return item.FACLT_NM.includes(searchText);\n    });\n  } // 검색결과가 없다면 안내메시지를 출력하는 모달을 띄운다\n\n\n  if (results.length === 0) setShow(true);else {\n    setSearchResults(results);\n    setSearchCount(results.length);\n  }\n};\n\nmodule.exports = {\n  handleShowAll: handleShowAll,\n  handleFacilityChange: handleFacilityChange,\n  handleSigunChange: handleSigunChange,\n  handleSearchTextChange: handleSearchTextChange,\n  handleSearchButtonClick: handleSearchButtonClick\n};","map":{"version":3,"sources":["C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/models/Utils.js"],"names":["handleShowAll","location","href","handleFacilityChange","e","setSelectedFacility","target","value","handleSigunChange","setSelectedSigun","setSearchText","items","setState","setSearchResults","setSearchCount","firstFacility","find","item","SIGUN_NM","lat","parseFloat","REFINE_WGS84_LAT","lng","REFINE_WGS84_LOGT","prev","center","handleSearchTextChange","setIsButtonActive","Boolean","handleSearchButtonClick","selectedSigun","selectedFacility","searchText","setShow","results","filter","FACLT_DIV_NM","FACLT_NM","includes","length","module","exports"],"mappings":";;;;;;;;AAAA;AACA;AACA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBC,EAAAA,QAAQ,CAACC,IAAT,GAAc,GAAd;AACH,CAFD,C,CAIA;;;AACA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,CAAD,EAAIC,mBAAJ,EAA4B;AACrDA,EAAAA,mBAAmB,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAnB;AACH,CAFD,C,CAIA;;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,CAAD,EAAIK,gBAAJ,EAAsBJ,mBAAtB,EAA2CK,aAA3C,EACCC,KADD,EACQC,QADR,EACkBC,gBADlB,EACoCC,cADpC,EACuD;AAC7EL,EAAAA,gBAAgB,CAACL,CAAC,CAACE,MAAF,CAASC,KAAV,CAAhB;AACAF,EAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAK,EAAAA,aAAa,CAAC,EAAD,CAAb,CAH6E,CAK7E;;AACA,MAAMK,aAAa,GAAGJ,KAAK,CAACK,IAAN,CAAW,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,QAAL,KAAkBd,CAAC,CAACE,MAAF,CAASC,KAArC;AAAA,GAAX,CAAtB;;AACA,MAAIQ,aAAJ,EAAmB;AACf,QAAMI,GAAG,GAAGC,UAAU,CAACL,aAAa,CAACM,gBAAf,CAAtB;AACA,QAAMC,GAAG,GAAGF,UAAU,CAACL,aAAa,CAACQ,iBAAf,CAAtB,CAFe,CAGf;;AACAX,IAAAA,QAAQ,CAAC,UAACY,IAAD;AAAA,6CACFA,IADE;AAELC,QAAAA,MAAM,EAAE;AAAEN,UAAAA,GAAG,EAAHA,GAAF;AAAOG,UAAAA,GAAG,EAAHA;AAAP;AAFH;AAAA,KAAD,CAAR;AAIH,GAf4E,CAgB7E;;;AACAT,EAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAC,EAAAA,cAAc,CAAC,CAAD,CAAd;AACH,CApBD,C,CAsBA;;;AACA,IAAMY,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACtB,CAAD,EAAIM,aAAJ,EAAmBG,gBAAnB,EAAqCC,cAArC,EAAqDa,iBAArD,EAA2E;AACtGjB,EAAAA,aAAa,CAACN,CAAC,CAACE,MAAF,CAASC,KAAV,CAAb,CADsG,CAEtG;;AACAM,EAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAC,EAAAA,cAAc,CAAC,CAAD,CAAd;AACAa,EAAAA,iBAAiB,CAACC,OAAO,CAACxB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR,CAAjB;AACH,CAND;;AAQA,IAAMsB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAClB,KAAD,EAAQmB,aAAR,EAAuBC,gBAAvB,EACCC,UADD,EACaC,OADb,EACsBpB,gBADtB,EAECC,cAFD,EAEoB;AAChD;AACA,MAAIoB,OAAO,sBAAOvB,KAAP,CAAX,CAFgD,CAIhD;;;AACA,MAAImB,aAAJ,EAAmB;AACfI,IAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAClB,IAAD;AAAA,aAAUA,IAAI,CAACC,QAAL,KAAkBY,aAA5B;AAAA,KAAf,CAAV;AACH,GAP+C,CAQhD;;;AACA,MAAIC,gBAAJ,EAAsB;AAClBG,IAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAClB,IAAD;AAAA,aAAUA,IAAI,CAACmB,YAAL,KAAsBL,gBAAhC;AAAA,KAAf,CAAV;AACH,GAX+C,CAYhD;;;AACA,MAAIC,UAAJ,EAAgB;AACZE,IAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAClB,IAAD;AAAA,aAAUA,IAAI,CAACoB,QAAL,CAAcC,QAAd,CAAuBN,UAAvB,CAAV;AAAA,KAAf,CAAV;AACH,GAf+C,CAiBhD;;;AACA,MAAIE,OAAO,CAACK,MAAR,KAAmB,CAAvB,EAA0BN,OAAO,CAAC,IAAD,CAAP,CAA1B,KACI;AACApB,IAAAA,gBAAgB,CAACqB,OAAD,CAAhB;AACApB,IAAAA,cAAc,CAACoB,OAAO,CAACK,MAAT,CAAd;AACH;AACJ,CAzBD;;AA6BAC,MAAM,CAACC,OAAP,GAAiB;AAACzC,EAAAA,aAAa,EAAbA,aAAD;AAAgBG,EAAAA,oBAAoB,EAApBA,oBAAhB;AACbK,EAAAA,iBAAiB,EAAjBA,iBADa;AACMkB,EAAAA,sBAAsB,EAAtBA,sBADN;AAC8BG,EAAAA,uBAAuB,EAAvBA;AAD9B,CAAjB","sourcesContent":["// index.js에서 사용되는 함수들\r\n// 전체시설보기 눌렀을때 재렌더링\r\nconst handleShowAll = () => {\r\n    location.href=\"/\"\r\n};\r\n\r\n// 시설구분명 선택 시 state 업데이트\r\nconst handleFacilityChange = (e, setSelectedFacility) => {\r\n    setSelectedFacility(e.target.value);\r\n}\r\n\r\n// 시군명 선택 시 시설구분명 셀렉트 태그 업데이트 및 지도 중심좌표 설정\r\nconst handleSigunChange = (e, setSelectedSigun, setSelectedFacility, setSearchText,\r\n                           items, setState, setSearchResults, setSearchCount) => {\r\n    setSelectedSigun(e.target.value);\r\n    setSelectedFacility(\"\");\r\n    setSearchText(\"\");\r\n\r\n    // 시설 데이터 중 첫번째 시설의 위도와 경도 정보 가져오기\r\n    const firstFacility = items.find((item) => item.SIGUN_NM === e.target.value);\r\n    if (firstFacility) {\r\n        const lat = parseFloat(firstFacility.REFINE_WGS84_LAT);\r\n        const lng = parseFloat(firstFacility.REFINE_WGS84_LOGT);\r\n        // 위도와 경도 정보로 중심 좌표 설정\r\n        setState((prev) => ({\r\n            ...prev,\r\n            center: { lat, lng },\r\n        }));\r\n    }\r\n    // 검색 결과 초기화\r\n    setSearchResults([]);\r\n    setSearchCount(0);\r\n}\r\n\r\n// 검색어 입력 시 state 업데이트\r\nconst handleSearchTextChange = (e, setSearchText, setSearchResults, setSearchCount, setIsButtonActive) => {\r\n    setSearchText(e.target.value);\r\n    // 검색 결과 초기화\r\n    setSearchResults([]);\r\n    setSearchCount(0);\r\n    setIsButtonActive(Boolean(e.target.value));\r\n}\r\n\r\nconst handleSearchButtonClick = (items, selectedSigun, selectedFacility,\r\n                                 searchText, setShow, setSearchResults,\r\n                                 setSearchCount) => {\r\n    // items 객체 복사\r\n    let results = [...items];\r\n\r\n    // 선택된 시군명이 있다면, 해당 시군명에 해당하는 시설들만 필터링\r\n    if (selectedSigun) {\r\n        results = results.filter((item) => item.SIGUN_NM === selectedSigun);\r\n    }\r\n    // 선택된 시설구분명이 있다면, 해당 시설구분명에 해당하는 시설들만 필터링\r\n    if (selectedFacility) {\r\n        results = results.filter((item) => item.FACLT_DIV_NM === selectedFacility);\r\n    }\r\n    // 검색어가 있다면, 시설명이 해당 검색어를 포함하는 시설들만 필터링\r\n    if (searchText) {\r\n        results = results.filter((item) => item.FACLT_NM.includes(searchText));\r\n    }\r\n\r\n    // 검색결과가 없다면 안내메시지를 출력하는 모달을 띄운다\r\n    if (results.length === 0) setShow(true)\r\n    else{\r\n        setSearchResults(results);\r\n        setSearchCount(results.length);\r\n    }\r\n}\r\n\r\n\r\n\r\nmodule.exports = {handleShowAll, handleFacilityChange,\r\n    handleSigunChange, handleSearchTextChange, handleSearchButtonClick};"]},"metadata":{},"sourceType":"script"}