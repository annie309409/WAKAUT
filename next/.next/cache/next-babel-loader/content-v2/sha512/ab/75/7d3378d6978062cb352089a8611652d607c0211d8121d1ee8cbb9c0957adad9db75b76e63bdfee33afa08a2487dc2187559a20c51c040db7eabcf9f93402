{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Alerts from '../../components/alert';\nimport Search from '../../components/search';\nimport { Container } from 'react-bootstrap';\nimport List from '../../components/list';\nimport WriteModal from './write_modal';\nimport getLayout from '../../components/layouts/getLayout';\nimport { Datas } from '../../components/feutils';\nimport { BarLoader } from \"react-spinners\"; //처음 데이터 세팅\n\nexport async function getServerSideProps(ctx) {\n  let boards = await Datas('/board/boardlist', 'pg=5');\n  return {\n    props: {\n      boards\n    }\n  };\n}\n\nconst BoardList = ({\n  boards,\n  session\n}) => {\n  let {\n    0: dtfn,\n    1: setDtfn\n  } = useState(boards.boards);\n  let {\n    0: cnt,\n    1: setCnt\n  } = useState(2);\n  const {\n    0: lgShow,\n    1: setLgShow\n  } = useState(false);\n  const {\n    0: selVal,\n    1: setSelval\n  } = useState('All');\n  const {\n    0: srhVal,\n    1: setSrhVal\n  } = useState('');\n  const {\n    0: srch,\n    1: setSrch\n  } = useState(false); //스크롤 페이징 처리\n\n  async function handleScroll() {\n    const scrollHeight = document.documentElement.scrollHeight;\n    const scrollTop = document.documentElement.scrollTop;\n    const clientHeight = document.documentElement.clientHeight;\n\n    if (scrollTop + clientHeight >= scrollHeight) {\n      setCnt(cnt + 1);\n      let dt = await dts(cnt * 5);\n      setDtfn(dt);\n    }\n  } // 스크롤 페이징 데이터 불러오기\n\n\n  async function dts(i) {\n    let res = await Datas('/board/boardlist', `pg=${i}&cat=${selVal}&note=${srhVal}`).then(res => res);\n    return await res.boards;\n  } //검색 시 액션\n\n\n  async function sc() {\n    setSrch(true);\n    dts(5);\n  } //스크롤 이벤트 등록\n\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, {\n      capture: true\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll, {\n        capture: true\n      });\n    };\n  });\n  return __jsx(React.Fragment, null, __jsx(Alerts, {\n    color: \"success\",\n    msg: \"\\uD574\\uB2F9 \\uAC8C\\uC2DC\\uD310\\uC740 \\uAD00\\uB9AC\\uC790\\uC5D0\\uC758\\uD574 \\uC2E4\\uC2DC\\uAC04 \\uAD00\\uB9AC\\uB418\\uACE0\\uC788\\uC2B5\\uB2C8\\uB2E4. \\uD5C8\\uC704\\uC0AC\\uC2E4\\uC720\\uD3EC \\uBC0F \\uBD80\\uC801\\uC808\\uD55C \\uD45C\\uD604\\uC740 \\uCC28\\uB2E8\\uB420 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n  }), session.userid != 0 ? __jsx(Search, {\n    cat: ['commnunity', 'review'],\n    title: \"All\",\n    btn: ['검색하기', '새글쓰기'],\n    btncol: ['secondary', 'success'],\n    click: [sc, () => {\n      setLgShow(true);\n    }],\n    setSelval: setSelval,\n    setSrhVal: setSrhVal,\n    srhVal: srhVal\n  }) : __jsx(Search, {\n    cat: ['commnunity', 'review'],\n    title: \"All\",\n    btn: ['검색하기'],\n    btncol: ['secondary'],\n    click: [sc],\n    setSelval: setSelval,\n    setSrhVal: setSrhVal,\n    srhVal: srhVal\n  }), __jsx(Container, {\n    className: \"lists\"\n  }, dtfn.map((m, idx) => {\n    return __jsx(List, {\n      key: idx,\n      title: m.title,\n      note: m.content,\n      malcnt: m.cmtcnt,\n      img: true,\n      col: \"bg-warning\",\n      time: m.regdate2,\n      kd: m.category,\n      view: m.views,\n      to: `/board/boardview?bid=${m.bid}`,\n      name: m.name\n    });\n  }), __jsx(\"div\", {\n    className: \"pg\"\n  }, __jsx(BarLoader, {\n    color: \"#ccc\",\n    cssOverride: {\n      position: \"absolute\",\n      margin: \"auto\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: 555\n    }\n  }))), __jsx(WriteModal, {\n    lgShow: lgShow,\n    setLgShow: setLgShow,\n    sename: session.name,\n    seid: session.userid\n  }));\n};\n\ngetLayout(BoardList, {\n  title: '다같이 운동해요! WAKAUT!',\n  description: '워크아웃 커뮤니티 게시판입니다.'\n});\nexport default BoardList;","map":null,"metadata":{},"sourceType":"module"}