{"ast":null,"code":"import User from '../../../models/users';\nexport default (async (req, res) => {\n  const [userid, passwd] = [req.query.userid, req.query.passwd];\n\n  try {\n    const mem = new User().select(userid, passwd).then(res => res);\n    const result = (await mem).data;\n    const data = {\n      uid: (await result)[0].uid,\n      userid: (await result)[0].uid,\n      email: (await result)[0].email,\n      name: (await result)[0].name\n    };\n    res.status(200).json(await data);\n  } catch (e) {\n    res.status(500).json({\n      '에러메세지': '에러발생'\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/pages/api/users/login.js"],"names":["User","req","res","userid","passwd","query","mem","select","then","result","data","uid","email","name","status","json","e"],"mappings":"AAAA,OAAOA,IAAP,MAAkB,uBAAlB;AAEA,gBAAe,OAAOC,GAAP,EAAWC,GAAX,KAAiB;AAC5B,QAAM,CAACC,MAAD,EAASC,MAAT,IAAoB,CAACH,GAAG,CAACI,KAAJ,CAAUF,MAAX,EAAmBF,GAAG,CAACI,KAAJ,CAAUD,MAA7B,CAA1B;;AACA,MAAG;AACC,UAAME,GAAG,GAAG,IAAIN,IAAJ,GAAWO,MAAX,CAAkBJ,MAAlB,EAAyBC,MAAzB,EAAiCI,IAAjC,CAAsCN,GAAG,IAAEA,GAA3C,CAAZ;AACA,UAAMO,MAAM,GAAG,CAAC,MAAMH,GAAP,EAAYI,IAA3B;AACA,UAAMA,IAAI,GAAG;AAAEC,MAAAA,GAAG,EAAE,CAAC,MAAMF,MAAP,EAAe,CAAf,EAAkBE,GAAzB;AACTR,MAAAA,MAAM,EAAE,CAAC,MAAMM,MAAP,EAAe,CAAf,EAAkBE,GADjB;AAETC,MAAAA,KAAK,EAAE,CAAC,MAAMH,MAAP,EAAe,CAAf,EAAkBG,KAFhB;AAGTC,MAAAA,IAAI,EAAC,CAAC,MAAMJ,MAAP,EAAe,CAAf,EAAkBI;AAHd,KAAb;AAIIX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,MAAML,IAA3B;AACH,GARL,CAQK,OAAMM,CAAN,EAAQ;AACLd,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC,eAAQ;AAAT,KAArB;AACP;AACJ,CAbD","sourcesContent":["import User  from '../../../models/users';\r\n\r\nexport default async (req,res)=>{\r\n    const [userid, passwd] =  [req.query.userid, req.query.passwd];\r\n    try{\r\n        const mem = new User().select(userid,passwd).then(res=>res);\r\n        const result = (await mem).data;\r\n        const data = { uid: (await result)[0].uid,\r\n            userid: (await result)[0].uid, \r\n            email: (await result)[0].email, \r\n            name:(await result)[0].name }\r\n            res.status(200).json(await data);\r\n        }catch(e){\r\n            res.status(500).json({'에러메세지':'에러발생'});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}