{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport List from \"../../components/list\";\nimport Link from \"next/link\";\nimport { useState } from 'react';\nimport WriteModal from \"./write_modal\";\nimport Mgmodal from \"../../components/mgmodal\";\nimport getLayout from '../../components/layouts/getLayout';\nimport { Datas, Post, handleInput } from '../../components/feutils';\nlet title = '';\nlet contents = ''; //데이터 끌고오기!\n\nexport async function getServerSideProps(ctx) {\n  let boards = await Datas(`/board/boardview?bid=${ctx.query.bid}`);\n  return {\n    props: {\n      boards\n    }\n  };\n}\n\nconst Boardview = ({\n  boards,\n  session\n}) => {\n  const {\n    0: lgShow,\n    1: setLgShow\n  } = useState(false);\n  const {\n    0: mgShow,\n    1: setMgShow\n  } = useState(false);\n  const {\n    0: reply,\n    1: setReply\n  } = useState();\n  const {\n    0: cmts,\n    1: setCmts\n  } = useState(boards[0].com);\n  const {\n    0: cnfirm,\n    1: setCnfirm\n  } = useState(false);\n  let bd = boards[0]; //데이터 등록하기\n\n  async function write(e, {\n    bid,\n    userid,\n    comment\n  }) {\n    e.preventDefault();\n\n    if (reply != '') {\n      let dt = Post({\n        bid: bid,\n        userid: userid,\n        comment: comment\n      }, '/board/repwrite').then(r => r);\n      if ((await dt).cnt > 0) dts();\n      setReply('');\n    } else {\n      alert('아무것도 입력하지 않았어요😥');\n    }\n  } //등록 후 끌고오기\n\n\n  async function dts() {\n    let res = await Datas(`/board/boardview`, `bid=${bd.bid}`);\n    setCmts(res[0].com);\n  } //리플 삭제하기\n\n\n  function del(cid) {\n    Post({\n      cid: cid\n    }, '/board/repwrite');\n    dts();\n  } //게시글 삭제하기\n\n\n  if (cnfirm) {\n    async function delBD() {\n      let dt = Post({\n        bid: bd.bid\n      }, '/board/delete').then(r => r);\n\n      if ((await dt).cnt > 0) {\n        location.href = 'http://localhost:3000/board/boardlist';\n      }\n    }\n\n    delBD();\n  }\n\n  ;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"brdview\"\n  }, __jsx(\"header\", {\n    className: \"bg-secondary pt-5 pb-4 brdview\"\n  }), __jsx(Container, null, __jsx(List, {\n    title: bd.title,\n    kd: bd.category,\n    time: bd.regdate2,\n    view: bd.views + 1,\n    name: bd.name\n  }))), __jsx(Container, null, __jsx(\"p\", {\n    className: \"viewnote\"\n  }, bd.content), __jsx(\"div\", {\n    className: \"replay p-5\"\n  }, cmts.map((m, idx) => {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"txtLft d-flex\",\n      key: idx\n    }, __jsx(\"h5\", {\n      key: m + idx + idx\n    }, m.name), __jsx(\"p\", {\n      className: \"ms-5\",\n      key: m + idx\n    }, m.comment, \" \", __jsx(\"small\", null, m.regdate2)), session.name === m.name ? __jsx(\"p\", {\n      className: \"ms-3 delRep\",\n      onClick: () => {\n        del(m.cid);\n      },\n      key: m + m + idx\n    }, \"X\") : '', session.name === 'admin' ? __jsx(\"p\", {\n      className: \"ms-3 delRep\",\n      onClick: () => {\n        del(m.cid);\n      },\n      key: m + m + idx\n    }, \"X\") : ''));\n  }), __jsx(Form, null, __jsx(\"div\", {\n    className: \"reTxt d-flex align-items-end mt-4\"\n  }, __jsx(Form.Control, {\n    as: \"textarea\",\n    placeholder: \"\\uB313\\uAE00\\uC740 \\uD55C\\uBC88 \\uB2EC\\uBA74 \\uC0AD\\uC81C\\uAC00 \\uBD88\\uAC00\\uB2A5\\uD558\\uB2F5\\uB2C8\\uB2F9 \\uD83D\\uDC6E\\u200D\\u2642\\uFE0F\\uD83D\\uDC6E\\u200D\\u2640\\uFE0F \",\n    style: {\n      height: '80px',\n      width: '90%'\n    },\n    value: reply,\n    onChange: e => {\n      handleInput(setReply, e);\n    }\n  }), __jsx(\"button\", {\n    className: \"btn btn-success ms-3\",\n    type: \"submit\",\n    onClick: e => {\n      write(e, {\n        bid: bd.bid,\n        userid: parseInt(session.userid),\n        comment: reply\n      });\n    }\n  }, \"\\uB313\\uAE00 \\uB4F1\\uB85D\")))), __jsx(\"div\", {\n    className: \"btns mt-4 mb-4 d-flex  justify-content-end\"\n  }, __jsx(Button, {\n    className: \"ms-2\",\n    variant: \"primary\"\n  }, __jsx(Link, {\n    href: \"/board/boardlist\"\n  }, \"\\uBAA9\\uB85D\\uC73C\\uB85C\")), session.name === bd.name ? __jsx(Button, {\n    className: \"ms-2\",\n    variant: \"success\",\n    onClick: () => {\n      setLgShow(true);\n    }\n  }, \"\\uC218\\uC815\\uD558\\uAE30\") : '', session.name === bd.name ? __jsx(Button, {\n    className: \"ms-2\",\n    variant: \"secondary\",\n    onClick: () => {\n      setMgShow(true);\n    }\n  }, \"\\uC0AD\\uC81C\\uD558\\uAE30\") : '', session.name === 'admin' ? __jsx(Button, {\n    className: \"ms-2\",\n    variant: \"danger\",\n    onClick: () => {\n      setMgShow(true);\n    }\n  }, \"\\uAC15\\uC81C\\uC0AD\\uC81C\") : ''), __jsx(Mgmodal, {\n    LgShow: mgShow,\n    setLgShow: setMgShow,\n    setCnfirm: setCnfirm,\n    title: \"\\uAC8C\\uC2DC\\uAE00 \\uC0AD\\uC81C\",\n    msg: \"\\uC815\\uB9D0 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n  }), __jsx(WriteModal, {\n    title: boards[0].title,\n    note: boards[0].content,\n    bid: boards[0].bid,\n    setLgShow: setLgShow,\n    lgShow: lgShow,\n    sename: session.name,\n    seid: session.userid\n  })));\n};\n\ngetLayout(Boardview, {\n  title: title,\n  description: contents\n});\nexport default Boardview;","map":null,"metadata":{},"sourceType":"module"}