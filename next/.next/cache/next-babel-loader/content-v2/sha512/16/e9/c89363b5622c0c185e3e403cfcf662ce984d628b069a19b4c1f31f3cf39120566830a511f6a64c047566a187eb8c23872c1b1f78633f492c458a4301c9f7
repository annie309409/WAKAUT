{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/pc/Desktop/\\uD559\\uC5B8/WAKAUT/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/pc/Desktop/\\uD559\\uC5B8/WAKAUT/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport default function getServerSideProps(_x) {\n  return _getServerSideProps.apply(this, arguments);\n}\n\nfunction _getServerSideProps() {\n  _getServerSideProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var url, res, boards;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"http://localhost:3000/api/board/boardlist\";\n            _context.next = 3;\n            return axios.get(url);\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.data;\n\n          case 6:\n            boards = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: boards\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getServerSideProps.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/학언/WAKAUT/next/pages/feutils.js"],"names":["axios","getServerSideProps","ctx","url","get","res","data","boards","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,wBAA8BC,kBAA9B;AAAA;AAAA;;;iFAAe,iBAAkCC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,GADO;AAAA;AAAA,mBAEOH,KAAK,CAACI,GAAN,CAAUD,GAAV,CAFP;;AAAA;AAELE,YAAAA,GAFK;AAAA;AAAA,mBAGUA,GAAG,CAACC,IAHd;;AAAA;AAGLC,YAAAA,MAHK;AAAA,6CAIJ;AAACC,cAAAA,KAAK,EAACD;AAAP,aAJI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from 'axios';\r\nexport default async function getServerSideProps(ctx){\r\n    let url = `http://localhost:3000/api/board/boardlist`;\r\n    const res = await axios.get(url);\r\n    const boards = await res.data;\r\n    return {props:boards};\r\n}"]},"metadata":{},"sourceType":"module"}