{"ast":null,"code":"var _toConsumableArray = require(\"C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"C:/Users/fullstack/Desktop/TeamWorks/WAKAUT/next/node_modules/@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// index.js에서 사용되는 함수들\n// 전체시설보기 눌렀을때 재렌더링\nvar handleShowAll = function handleShowAll() {\n  location.href = \"/\";\n}; // 시설구분명 선택 시 state 업데이트\n\n\nvar handleFacilityChange = function handleFacilityChange(e, setSelectedFacility) {\n  setSelectedFacility(e.target.value);\n}; // 시군명 선택 시 시설구분명 셀렉트 태그 업데이트 및 지도 중심좌표 설정\n\n\nvar handleSigunChange = function handleSigunChange(e, setSelectedSigun, setSelectedFacility, setSearchText, items, setState, setSearchResults, setSearchCount) {\n  setSelectedSigun(e.target.value);\n  setSelectedFacility(\"\");\n  setSearchText(\"\"); // 시설 데이터 중 첫번째 시설의 위도와 경도 정보 가져오기\n\n  var firstFacility = items.find(function (item) {\n    return item.SIGUN_NM === e.target.value;\n  });\n\n  if (firstFacility) {\n    var lat = parseFloat(firstFacility.REFINE_WGS84_LAT);\n    var lng = parseFloat(firstFacility.REFINE_WGS84_LOGT); // 위도와 경도 정보로 중심 좌표 설정\n\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        center: {\n          lat: lat,\n          lng: lng\n        }\n      });\n    });\n  } // 검색 결과 초기화\n\n\n  setSearchResults([]);\n  setSearchCount(0);\n}; // 검색어 입력 시 state 업데이트\n\n\nvar handleSearchTextChange = function handleSearchTextChange(e, setSearchText, setSearchResults, setSearchCount, setIsButtonActive) {\n  setSearchText(e.target.value); // 검색 결과 초기화\n\n  setSearchResults([]);\n  setSearchCount(0);\n  setIsButtonActive(Boolean(e.target.value));\n};\n\nvar handleSearchButtonClick = function handleSearchButtonClick(items, selectedSigun, selectedFacility, searchText, setShow, setSearchResults, setSearchCount) {\n  // items 객체 복사\n  var results = _toConsumableArray(items); // 선택된 시군명이 있다면, 해당 시군명에 해당하는 시설들만 필터링\n\n\n  if (selectedSigun) {\n    results = results.filter(function (item) {\n      return item.SIGUN_NM === selectedSigun;\n    });\n  } // 선택된 시설구분명이 있다면, 해당 시설구분명에 해당하는 시설들만 필터링\n\n\n  if (selectedFacility) {\n    results = results.filter(function (item) {\n      return item.FACLT_DIV_NM === selectedFacility;\n    });\n  } // 검색어가 있다면, 시설명이 해당 검색어를 포함하는 시설들만 필터링\n\n\n  if (searchText) {\n    results = results.filter(function (item) {\n      return item.FACLT_NM.includes(searchText);\n    });\n  } // 검색결과가 없다면 안내메시지를 출력하는 모달을 띄운다\n\n\n  if (results.length === 0) setShow(true);else {\n    setSearchResults(results);\n    setSearchCount(results.length);\n  }\n};\n\nmodule.exports = {\n  handleShowAll: handleShowAll,\n  handleFacilityChange: handleFacilityChange,\n  handleSigunChange: handleSigunChange,\n  handleSearchTextChange: handleSearchTextChange,\n  handleSearchButtonClick: handleSearchButtonClick\n};","map":null,"metadata":{},"sourceType":"script"}