{"ast":null,"code":"import _toConsumableArray from \"C:/Users/pc/Desktop/\\uD559\\uC5B8/WAKAUT/WAKAUT/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/pc/Desktop/\\uD559\\uC5B8/WAKAUT/WAKAUT/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/Users/pc/Desktop/\\uD559\\uC5B8/WAKAUT/WAKAUT/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:/Users/pc/Desktop/\\uD559\\uC5B8/WAKAUT/WAKAUT/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\\\uD559\\uC5B8\\\\WAKAUT\\\\WAKAUT\\\\next\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button, Container, Form, FormSelect } from \"react-bootstrap\";\nimport List from \"../components/list\";\nimport { useEffect, useState } from \"react\";\nimport { AiTwotoneHeart } from \"react-icons/ai\";\nimport PlaceModal from \"./place_modal\";\nimport img from '../assets/workaut.png';\nimport mapicon from '../assets/map-icon.png';\nimport getLayout from \"../components/layouts/getLayout\";\nimport Modal from \"../components/modal\";\nimport { Datas } from \"../components/feutils\";\nimport { handleFacilityChange, handleSearchButtonClick, handleSearchTextChange, handleShowAll, handleSigunChange } from \"../models/Utils\";\nimport dynamic from 'next/dynamic';\nvar Map = dynamic(_c = function _c() {\n  return import(\"react-kakao-maps-sdk\").then(function (module) {\n    return module.Map;\n  });\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"react-kakao-maps-sdk\")];\n    },\n    modules: [\"index.js -> \" + \"react-kakao-maps-sdk\"]\n  }\n});\n_c2 = Map;\nvar MapMarker = dynamic(_c3 = function _c3() {\n  return import(\"react-kakao-maps-sdk\").then(function (module) {\n    return module.MapMarker;\n  });\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"react-kakao-maps-sdk\")];\n    },\n    modules: [\"index.js -> \" + \"react-kakao-maps-sdk\"]\n  }\n});\n_c4 = MapMarker;\nexport var __N_SSP = true;\nexport default function Index(_ref) {\n  _s();\n\n  var _this2 = this;\n\n  var items = _ref.items,\n      word = _ref.word,\n      sessionUserid = _ref.sessionUserid,\n      fList = _ref.fList;\n  var des = '#에어로빅 #줌바 #조깅';\n\n  var _useState = useState(false),\n      lgShow = _useState[0],\n      setLgShow = _useState[1];\n\n  var _useState2 = useState(false),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      selectedSigun = _useState3[0],\n      setSelectedSigun = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      selectedFacility = _useState4[0],\n      setSelectedFacility = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      searchText = _useState5[0],\n      setSearchText = _useState5[1];\n\n  var _useState6 = useState(items),\n      searchResults = _useState6[0],\n      setSearchResults = _useState6[1]; // 검색결과 저장 state\n\n\n  var _useState7 = useState(null),\n      selectedPlace = _useState7[0],\n      setSelectedPlace = _useState7[1]; // 마커 클릭시 모달 state\n\n\n  var _useState8 = useState(items.length),\n      searchCount = _useState8[0],\n      setSearchCount = _useState8[1]; // 총 몇개의 시설이 조회된건지 저장하는 state\n\n\n  var _useState9 = useState(false),\n      isButtonActive = _useState9[0],\n      setIsButtonActive = _useState9[1];\n\n  var _useState10 = useState({}),\n      bdList = _useState10[0],\n      setBDLists = _useState10[1];\n\n  var _useState11 = useState({}),\n      score = _useState11[0],\n      setScore = _useState11[1];\n\n  var _useState12 = useState(''),\n      peops = _useState12[0],\n      setPeops = _useState12[1];\n\n  var _useState13 = useState(''),\n      scs = _useState13[0],\n      setScs = _useState13[1]; // 즐겨찾기 추가 추적 state\n\n\n  var _useState14 = useState(false),\n      favoriteAdded = _useState14[0],\n      setFavoriteAdded = _useState14[1]; // List 컴포넌트 상태관리 state\n\n\n  var _useState15 = useState([]),\n      listData = _useState15[0],\n      setListData = _useState15[1];\n\n  useEffect(function () {\n    var updateListData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var fetchedFList, updatedListData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Datas('/member/favorites', \"userid=\".concat(sessionUserid));\n\n              case 2:\n                fetchedFList = _context.sent;\n                // 여기에서 새로운 데이터를 listData에 업데이트\n                updatedListData = searchResults.map(function (item) {\n                  var isFavorited = fetchedFList.some(function (facility) {\n                    return facility.facility === item.FACLT_NM;\n                  });\n                  return _objectSpread(_objectSpread({}, item), {}, {\n                    isFavorited: isFavorited\n                  });\n                });\n                setListData(updatedListData);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function updateListData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    updateListData();\n  }, [favoriteAdded, searchResults]);\n\n  var onFavoriteAdd = function onFavoriteAdd() {\n    setFavoriteAdded(!favoriteAdded); // location.href=\"/\"\n  }; // 시군명 선택 시 시설구분명 셀렉트 태그에 표시할 options 배열 반환\n\n\n  function getFacilityOptions(sigun) {\n    var _this = this;\n\n    var facilities = items.filter(function (item) {\n      return item.SIGUN_NM === sigun;\n    });\n\n    var facilityNames = _toConsumableArray(new Set(facilities.map(function (item) {\n      return item.FACLT_DIV_NM;\n    })));\n\n    return facilityNames.map(function (name) {\n      return __jsx(\"option\", {\n        key: name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 44\n        }\n      }, name);\n    });\n  }\n\n  var _useState16 = useState({\n    center: {\n      lat: 37.28892227326957,\n      lng: 127.05363481102465\n    },\n    errMsg: null,\n    isLoading: true\n  }),\n      state = _useState16[0],\n      setState = _useState16[1]; // useEffect는 최초 렌더링 이후에 실행\n  // useEffect의 첫 번째 인자로 전달한 함수는 컴포넌트가 마운트된 이후에 한번 실행되며,\n  // 두 번째 인자로 전달한 배열에 지정한 값이 변경되었을 때에도 실행\n\n\n  useEffect(function () {\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            center: {\n              lat: position.coords.latitude,\n              // 위도\n              lng: position.coords.longitude // 경도\n\n            },\n            isLoading: false\n          });\n        });\n      }, function (err) {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            errMsg: err.message,\n            isLoading: false\n          });\n        });\n      });\n    } else {\n      // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          errMsg: \"geolocation을 사용할수 없어요..\",\n          isLoading: false\n        });\n      });\n    }\n  }, []); // 게시글 목록 가지고 오기\n\n  function lists(_x) {\n    return _lists.apply(this, arguments);\n  } //별점 가져오기 \n\n\n  function _lists() {\n    _lists = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(fcname) {\n      var boards;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Datas('/board/boardlist', \"pg=5&fcname=\".concat(fcname)).then(function (r) {\n                return r;\n              });\n\n            case 2:\n              boards = _context3.sent;\n              _context3.t0 = setBDLists;\n              _context3.next = 6;\n              return boards;\n\n            case 6:\n              _context3.t1 = _context3.sent;\n              (0, _context3.t0)(_context3.t1);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _lists.apply(this, arguments);\n  }\n\n  var getScore = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(fac) {\n      var sc;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Datas('/member/addscore', \"facility=\".concat(fac));\n\n            case 2:\n              sc = _context2.sent;\n              _context2.t0 = setPeops;\n              _context2.next = 6;\n              return sc[0].cnt;\n\n            case 6:\n              _context2.t1 = _context2.sent;\n              (0, _context2.t0)(_context2.t1);\n              _context2.t2 = setScs;\n              _context2.next = 11;\n              return sc[0].score;\n\n            case 11:\n              _context2.t3 = _context2.sent;\n              (0, _context2.t2)(_context2.t3);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getScore(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Container, {\n    className: \"d-flex mt-4 mb-4 index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"left col-6 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \"\\uCD1D \", searchCount, \"\\uAC74\"), listData.map(function (item, idx) {\n    return __jsx(List, {\n      key: idx,\n      title: item.FACLT_NM,\n      malcnt: __jsx(AiTwotoneHeart, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }\n      }),\n      note: item.REFINE_ROADNM_ADDR,\n      col: item.isFavorited ? \"bg-danger\" : \"bg-secondary\",\n      textClick: function textClick() {\n        setSelectedPlace(item);\n        var lat = parseFloat(item.REFINE_WGS84_LAT);\n        var lng = parseFloat(item.REFINE_WGS84_LOGT);\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            center: {\n              lat: lat,\n              lng: lng\n            }\n          });\n        });\n        lists(item.FACLT_NM).then(getScore(item.FACLT_NM)).then(setLgShow(true));\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    });\n  })), __jsx(\"div\", {\n    className: \"right col-6 ms-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, word ? __jsx(Button, {\n    className: \"showAll-btn mb-2\",\n    variant: \"outline-success\",\n    onClick: handleShowAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, \"\\uC804\\uCCB4 \\uC2DC\\uC124\\uBCF4\\uAE30\") : false, __jsx(Form, {\n    className: \"d-flex mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, __jsx(FormSelect, {\n    value: selectedSigun,\n    onChange: function onChange(e) {\n      return handleSigunChange(e, setSelectedSigun, setSelectedFacility, setSearchText, items, setState, setSearchResults, setSearchCount);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, \"\\uC2DC\\uAD70\"), _toConsumableArray(new Set(items.map(function (item) {\n    return item.SIGUN_NM;\n  }))).map(function (sigun) {\n    return __jsx(\"option\", {\n      key: sigun,\n      value: sigun,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 33\n      }\n    }, sigun);\n  })), selectedSigun ? __jsx(FormSelect, {\n    value: selectedFacility,\n    onChange: function onChange(e) {\n      return handleFacilityChange(e, setSelectedFacility);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, \"\\uC2DC\\uC124\\uAD6C\\uBD84\\uBA85\"), getFacilityOptions(selectedSigun)) : __jsx(FormSelect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, \"\\uC2DC\\uC124\\uAD6C\\uBD84\\uBA85\")), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"\\uC5B4\\uB514\\uC11C \\uC6B4\\uB3D9\\uD560\\uAE4C\\uC694?\",\n    value: searchText,\n    onChange: function onChange(e) {\n      return handleSearchTextChange(e, setSearchText, setSearchResults, setSearchCount, setIsButtonActive);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    className: \"facility-btn\",\n    variant: \"outline-success\",\n    active: isButtonActive,\n    onClick: function onClick() {\n      return handleSearchButtonClick(items, selectedSigun, selectedFacility, searchText, setShow, setSearchResults, setSearchCount);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, \"Search\")), __jsx(Map, {\n    center: state.center,\n    style: {\n      width: \"100%\",\n      height: \"800px\"\n    },\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, (!state.isLoading ? searchResults : []).map(function (item) {\n    return __jsx(MapMarker, {\n      key: item.FACLT_NM,\n      position: {\n        lat: item.REFINE_WGS84_LAT,\n        lng: item.REFINE_WGS84_LOGT\n      },\n      onClick: function onClick() {\n        setSelectedPlace(item);\n        setLgShow(true);\n      },\n      image: {\n        src: \"\".concat(mapicon),\n        size: {\n          width: 30,\n          height: 30\n        },\n        options: {\n          offset: {\n            x: 27,\n            y: 69\n          }\n        }\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    });\n  }))), __jsx(PlaceModal, {\n    size: \"lg\",\n    lgShow: lgShow,\n    setLgShow: setLgShow,\n    score: scs,\n    setScs: setScs,\n    peops: peops,\n    setPeops: setPeops,\n    title: selectedPlace ? selectedPlace.FACLT_NM : \"\",\n    addr: selectedPlace ? selectedPlace.REFINE_ROADNM_ADDR : \"\",\n    contact: selectedPlace ? selectedPlace.CONTCT_NO : \"\",\n    des: des,\n    img: img,\n    lat: selectedPlace ? selectedPlace.REFINE_WGS84_LAT : null,\n    lng: selectedPlace ? selectedPlace.REFINE_WGS84_LOGT : null,\n    bdList: bdList,\n    userid: sessionUserid,\n    onFavoriteAdd: onFavoriteAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }), __jsx(Modal, {\n    title: \"\\uC54C\\uB9BC\",\n    \"class\": \"searchModal\",\n    size: \"md\",\n    lgShow: show,\n    setLgShow: setShow,\n    children: \"\\uD574\\uB2F9\\uD558\\uB294 \\uC2DC\\uC124\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(Index, \"BhSeGSDOZQVKuj9GCgwiY7HvkII=\");\n\n_c5 = Index;\ngetLayout(Index, {\n  title: '주변에서 운동해요! WAKAUT!',\n  description: '신개념 운동 플랫폼 워크아웃!'\n});\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Map$dynamic\");\n$RefreshReg$(_c2, \"Map\");\n$RefreshReg$(_c3, \"MapMarker$dynamic\");\n$RefreshReg$(_c4, \"MapMarker\");\n$RefreshReg$(_c5, \"Index\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/학언/WAKAUT/WAKAUT/next/pages/index.js"],"names":["Button","Container","Form","FormSelect","List","useEffect","useState","AiTwotoneHeart","PlaceModal","img","mapicon","getLayout","Modal","Datas","handleFacilityChange","handleSearchButtonClick","handleSearchTextChange","handleShowAll","handleSigunChange","dynamic","Map","then","module","ssr","MapMarker","Index","items","word","sessionUserid","fList","des","lgShow","setLgShow","show","setShow","selectedSigun","setSelectedSigun","selectedFacility","setSelectedFacility","searchText","setSearchText","searchResults","setSearchResults","selectedPlace","setSelectedPlace","length","searchCount","setSearchCount","isButtonActive","setIsButtonActive","bdList","setBDLists","score","setScore","peops","setPeops","scs","setScs","favoriteAdded","setFavoriteAdded","listData","setListData","updateListData","fetchedFList","updatedListData","map","item","isFavorited","some","facility","FACLT_NM","onFavoriteAdd","getFacilityOptions","sigun","facilities","filter","SIGUN_NM","facilityNames","Set","FACLT_DIV_NM","name","center","lat","lng","errMsg","isLoading","state","setState","navigator","geolocation","getCurrentPosition","position","prev","coords","latitude","longitude","err","message","lists","fcname","r","boards","getScore","fac","sc","cnt","idx","REFINE_ROADNM_ADDR","parseFloat","REFINE_WGS84_LAT","REFINE_WGS84_LOGT","e","width","height","src","size","options","offset","x","y","CONTCT_NO","title","description"],"mappings":"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","sourcesContent":["import {Button, Container, Form, FormSelect} from \"react-bootstrap\";\r\nimport List from \"../components/list\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AiTwotoneHeart } from \"react-icons/ai\";\r\nimport PlaceModal from \"./place_modal\";\r\nimport img from '../assets/workaut.png';\r\nimport mapicon from '../assets/map-icon.png';\r\nimport getLayout from \"../components/layouts/getLayout\";\r\nimport Modal from \"../components/modal\";\r\nimport {Datas} from \"../components/feutils\";\r\nimport {\r\n    handleFacilityChange,\r\n    handleSearchButtonClick,\r\n    handleSearchTextChange,\r\n    handleShowAll,\r\n    handleSigunChange\r\n} from \"../models/Utils\";\r\n\r\nimport dynamic from 'next/dynamic';\r\nimport {getSession} from \"next-auth/client\";\r\n\r\n\r\nconst Map = dynamic(() => import(\"react-kakao-maps-sdk\").then((module) => module.Map), {\r\n    ssr: false\r\n});\r\nconst MapMarker = dynamic(() => import(\"react-kakao-maps-sdk\").then((module) => module.MapMarker), {\r\n    ssr: false\r\n});\r\n\r\nexport async function getServerSideProps(ctx) {\r\n    // 세션 객체 가져오기\r\n    const session = await getSession(ctx);\r\n\r\n    // 로그인한 사용자의 아이디\r\n    let sessionUserid = session?.user?.userid || null;\r\n\r\n    const word = ctx.query.word || '';\r\n    let items = await Datas('/main', `srch=${word}`);\r\n    let fList = await Datas('/member/favorites', `userid=${sessionUserid}`);\r\n    return {props: {items: items, word: word, sessionUserid, fList}}\r\n}\r\n\r\nexport default function Index({items, word, sessionUserid, fList}) {\r\n    let des = '#에어로빅 #줌바 #조깅';\r\n\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [selectedSigun, setSelectedSigun] = useState(\"\");\r\n    const [selectedFacility, setSelectedFacility] = useState(\"\");\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState(items);  // 검색결과 저장 state\r\n    const [selectedPlace, setSelectedPlace] = useState(null);   // 마커 클릭시 모달 state\r\n    const [searchCount, setSearchCount] = useState(items.length);  // 총 몇개의 시설이 조회된건지 저장하는 state\r\n    const [isButtonActive, setIsButtonActive] = useState(false);\r\n    const [bdList, setBDLists] = useState({});\r\n    const [score, setScore] = useState({});\r\n    const [peops,setPeops] = useState('');\r\n    const [scs,setScs] = useState('');\r\n\r\n    // 즐겨찾기 추가 추적 state\r\n    const [favoriteAdded, setFavoriteAdded] = useState(false);\r\n    // List 컴포넌트 상태관리 state\r\n    const [listData, setListData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const updateListData = async () => {\r\n            const fetchedFList = await Datas('/member/favorites', `userid=${sessionUserid}`);\r\n            // 여기에서 새로운 데이터를 listData에 업데이트\r\n            const updatedListData = searchResults.map((item) => {\r\n                const isFavorited = fetchedFList.some((facility) => facility.facility === item.FACLT_NM);\r\n                return { ...item, isFavorited };\r\n            });\r\n            setListData(updatedListData);\r\n        };\r\n\r\n        updateListData();\r\n    }, [favoriteAdded, searchResults]);\r\n\r\n    const onFavoriteAdd = () => {\r\n        setFavoriteAdded(!favoriteAdded);\r\n        // location.href=\"/\"\r\n    };\r\n\r\n    // 시군명 선택 시 시설구분명 셀렉트 태그에 표시할 options 배열 반환\r\n    function getFacilityOptions(sigun) {\r\n        const facilities = items.filter((item) => item.SIGUN_NM === sigun);\r\n        const facilityNames = [...new Set(facilities.map((item) => item.FACLT_DIV_NM))];\r\n        return facilityNames.map((name) => <option key={name}>{name}</option>);\r\n    }\r\n\r\n\r\n    const [state, setState] = useState({\r\n        center: {\r\n            lat: 37.28892227326957,\r\n            lng: 127.05363481102465,\r\n        },\r\n        errMsg: null,\r\n        isLoading: true,\r\n    })\r\n\r\n    // useEffect는 최초 렌더링 이후에 실행\r\n    // useEffect의 첫 번째 인자로 전달한 함수는 컴포넌트가 마운트된 이후에 한번 실행되며,\r\n    // 두 번째 인자로 전달한 배열에 지정한 값이 변경되었을 때에도 실행\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    setState((prev) => ({\r\n                        ...prev,\r\n                        center: {\r\n                            lat: position.coords.latitude, // 위도\r\n                            lng: position.coords.longitude, // 경도\r\n                        },\r\n                        isLoading: false,\r\n                    }))\r\n                },\r\n                (err) => {\r\n                    setState((prev) => ({\r\n                        ...prev,\r\n                        errMsg: err.message,\r\n                        isLoading: false,\r\n                    }))\r\n                }\r\n            )\r\n        } else {\r\n            // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\r\n            setState((prev) => ({\r\n                ...prev,\r\n                errMsg: \"geolocation을 사용할수 없어요..\",\r\n                isLoading: false,\r\n            }))\r\n        }\r\n    }, [])\r\n\r\n    // 게시글 목록 가지고 오기\r\n    async function lists(fcname){\r\n        let boards = await Datas('/board/boardlist',`pg=5&fcname=${fcname}`).then(r=>r);\r\n        setBDLists(await boards);\r\n    }\r\n   //별점 가져오기 \r\n    const getScore = async (fac)=>{\r\n        let sc= await Datas('/member/addscore', `facility=${fac}`);\r\n        setPeops(await sc[0].cnt);\r\n        setScs(await sc[0].score);\r\n    }\r\n\r\n    return(\r\n        <Container className=\"d-flex mt-4 mb-4 index\">\r\n            <div className=\"left col-6 \">\r\n                <p>총 {searchCount}건</p>\r\n                {listData.map((item,idx) => (\r\n                    <List\r\n                        key={idx}\r\n                        title={item.FACLT_NM}\r\n                        malcnt={<AiTwotoneHeart />}\r\n                        note={item.REFINE_ROADNM_ADDR}\r\n                        col={item.isFavorited ? \"bg-danger\" : \"bg-secondary\"}\r\n                        textClick={() => {\r\n                            setSelectedPlace(item);\r\n                            const lat = parseFloat(item.REFINE_WGS84_LAT);\r\n                            const lng = parseFloat(item.REFINE_WGS84_LOGT);\r\n                            setState((prev) => ({\r\n                                ...prev,\r\n                                center: { lat, lng },\r\n                            }));\r\n                            lists(item.FACLT_NM).then(getScore(item.FACLT_NM)).then(setLgShow(true))\r\n                        }}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"right col-6 ms-4\">\r\n                {word ? <Button className=\"showAll-btn mb-2\" variant=\"outline-success\" onClick={handleShowAll}>전체 시설보기</Button> : false}\r\n                <Form className=\"d-flex mb-2\">\r\n                    <FormSelect value={selectedSigun}\r\n                                onChange={e => handleSigunChange(\r\n                                    e,\r\n                                    setSelectedSigun,\r\n                                    setSelectedFacility,\r\n                                    setSearchText,\r\n                                    items,\r\n                                    setState,\r\n                                    setSearchResults,\r\n                                    setSearchCount)\r\n                                }>\r\n                        <option value=\"\">시군</option>\r\n                        {/* API에서 불러오는 데이터중 시군 데이터로 새로운 배열을 생성하되 중복을 제거함 */}\r\n                        {\r\n                            [...new Set(items.map((item) => item.SIGUN_NM))].map((sigun) => (\r\n                                <option key={sigun} value={sigun}>{sigun}</option>\r\n                            ))\r\n                        }\r\n                    </FormSelect>\r\n                    {selectedSigun\r\n                        ?\r\n                        <FormSelect value={selectedFacility} onChange={e => handleFacilityChange(e, setSelectedFacility)}>\r\n                            <option value=\"\">시설구분명</option>\r\n                            {getFacilityOptions(selectedSigun)}\r\n                        </FormSelect>\r\n                        :\r\n                        <FormSelect >\r\n                            <option>시설구분명</option>\r\n                        </FormSelect>\r\n                    }\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"어디서 운동할까요?\"\r\n                        value={searchText}\r\n                        onChange={e => handleSearchTextChange(e, setSearchText, setSearchResults, setSearchCount, setIsButtonActive)}\r\n                    />\r\n                    <Button className=\"facility-btn\" variant=\"outline-success\"\r\n                            active={isButtonActive}\r\n                            onClick={() => handleSearchButtonClick(\r\n                                items,\r\n                                selectedSigun,\r\n                                selectedFacility,\r\n                                searchText,\r\n                                setShow,\r\n                                setSearchResults,\r\n                                setSearchCount,\r\n                            )}>Search</Button>\r\n                </Form>\r\n\r\n            <Map center={state.center} style={{ width: \"100%\", height: \"800px\" }}  level={3}>\r\n                {(!state.isLoading ? searchResults : []).map((item) => (\r\n                    <MapMarker\r\n                        key={item.FACLT_NM}\r\n                        position={{ lat: item.REFINE_WGS84_LAT, lng: item.REFINE_WGS84_LOGT }}\r\n                        onClick={() => {\r\n                            setSelectedPlace(item);\r\n                            setLgShow(true);\r\n                        }}\r\n                        image={{\r\n                            src: `${mapicon}`,\r\n                            size: {width: 30, height: 30,},\r\n                            options: {\r\n                             offset: {x: 27, y: 69,},\r\n                        },\r\n                        }}\r\n                    />\r\n                ))}\r\n            </Map>\r\n            </div>\r\n            <PlaceModal\r\n                size=\"lg\"\r\n                lgShow={lgShow}\r\n                setLgShow={setLgShow}\r\n                score={scs}\r\n                setScs = {setScs}\r\n                peops={peops}\r\n                setPeops = {setPeops}\r\n                title={selectedPlace ? selectedPlace.FACLT_NM : \"\"}\r\n                addr={selectedPlace ? selectedPlace.REFINE_ROADNM_ADDR : \"\"}\r\n                contact={selectedPlace ? selectedPlace.CONTCT_NO : \"\"}\r\n                des={des}\r\n                img={img}\r\n                lat={selectedPlace ? selectedPlace.REFINE_WGS84_LAT : null}\r\n                lng={selectedPlace ? selectedPlace.REFINE_WGS84_LOGT : null}\r\n                bdList={bdList}\r\n                userid={sessionUserid}\r\n                onFavoriteAdd={onFavoriteAdd}\r\n            />\r\n            <Modal title=\"알림\" class=\"searchModal\" size=\"md\" lgShow={show} setLgShow={setShow}  children=\"해당하는 시설이 없습니다.\"/>\r\n        </Container>\r\n    )\r\n}\r\n\r\ngetLayout(Index,{title:'주변에서 운동해요! WAKAUT!',description:'신개념 운동 플랫폼 워크아웃!'})\r\n"]},"metadata":{},"sourceType":"module"}